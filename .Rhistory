temp2 <- genes[nearest(enhancers[enhancers$regulation == 'Decrease'],genes)]$regulation %>% table
count <- rbind(NC.e = temp, Increase.e = temp1, Decrease.e = temp2) %>% as.data.table()
count[,`:=`(enhancer = c('NC','Increase','Decrease') , sum = rowSums(count))/100]
temp <- genes[nearest(enhancers[enhancers$regulation == 'NC'],genes)]$regulation %>% table
temp1 <- genes[nearest(enhancers[enhancers$regulation == 'Increase'],genes)]$regulation %>% table
temp2 <- genes[nearest(enhancers[enhancers$regulation == 'Decrease'],genes)]$regulation %>% table
count <- rbind(NC.e = temp, Increase.e = temp1, Decrease.e = temp2) %>% as.data.table()
count[,`:=`(enhancer = c('NC','Increase','Decrease') , sum = rowSums(count)/100)]
count[,`:=`(Increase = round(Increase/sum,2),
Decrease = round(Decrease/sum,2),
NC = round(NC/sum,2))]
count <- melt(count, id.vars = c('enhancer','sum'))
count[,`:=`(enhancer = factor(enhancer, levels = c('Increase','NC','Decrease')),
variable = factor(variable, levels = c('Increase','NC','Decrease')))]
p <- ggplot(count, aes(x = enhancer,y=value, fill = variable))
p + geom_bar(stat = 'identity',width = 0.5) + theme_xf
p + geom_bar(stat = 'identity',width = 0.5) +
geom_text(vjust = 0.1) + theme_xf +
labs(x = NULL, y = 'percentage', title = 'Change of gene near enhancers') +
# ChIAPET_analysis --------------------------------------------------------
interaction <- fread('coordinates/Hela_hg19.ChromatinInteractons.bed', sep = '\t', header = F)
p <- ggplot(count, aes(x = enhancer,y=value, fill = variable, label = sum))
p + geom_bar(stat = 'identity',width = 0.5) +
geom_text(vjust = 0.1) + theme_xf +
labs(x = NULL, y = 'percentage', title = 'Change of gene near enhancers') +
# ChIAPET_analysis --------------------------------------------------------
interaction <- fread('coordinates/Hela_hg19.ChromatinInteractons.bed', sep = '\t', header = F)
p + geom_bar(stat = 'identity',width = 0.5) +
geom_text(vjust = 0.1) + theme_xf +
labs(x = NULL, y = 'percentage', title = 'Change of gene near enhancers')
count
p + geom_bar(stat = 'identity',width = 0.5) +
geom_text(y = 100, vjust = 0.1) + theme_xf +
labs(x = NULL, y = 'percentage', title = 'Change of gene near enhancers')
p <- ggplot(count, aes(x = enhancer,y=value, fill = variable, label = sum*100))
p + geom_bar(stat = 'identity',width = 0.5) +
geom_text(y = 100, vjust = 0.1) + theme_xf +
labs(x = NULL, y = 'percentage', title = 'Change of gene near enhancers')
p + geom_bar(stat = 'identity',width = 0.5) +
geom_text(y = 100, vjust = 0.15) + theme_xf +
labs(x = NULL, y = 'percentage', title = 'Change of gene near enhancers')
p + geom_bar(stat = 'identity',width = 0.5) +
geom_text(y = 100, vjust = 0.15, size = 2) + theme_xf +
labs(x = NULL, y = 'percentage', title = 'Change of gene near enhancers')
p + geom_bar(stat = 'identity',width = 0.5) +
geom_text(y = 100, vjust = 0.15, size = 5) + theme_xf +
labs(x = NULL, y = 'percentage', title = 'Change of gene near enhancers')
?scale_x_discrete
p + geom_bar(stat = 'identity',width = 0.5) +
geom_text(y = 100, vjust = 0.15, size = 5) + theme_xf +
labs(x = NULL, y = 'percentage', title = 'Change of gene near enhancers') +
scale_x_discrete(labels = c('Genes near increase enhancer',
'Genes near NC enhancer',
'Genes near Decrease enhancer'))
p + geom_bar(stat = 'identity',width = 0.5) +
geom_text(y = 100, vjust = 0.15, size = 5) + theme_xf +
labs(x = NULL, y = 'percentage', title = 'Change of gene near enhancers') +
scale_x_discrete(labels = c('Genes near increase enhancer',
'Genes near NC enhancer',
'Genes near Decrease enhancer')) +
theme(axis.text.x = element_text(angle = 50, vjust = -1))
p + geom_bar(stat = 'identity',width = 0.5) +
geom_text(y = 100, vjust = 0.15, size = 5) + theme_xf +
labs(x = NULL, y = 'percentage', title = 'Change of gene near enhancers') +
scale_x_discrete(labels = c('Genes near increase enhancer',
'Genes near NC enhancer',
'Genes near Decrease enhancer')) +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
p + geom_bar(stat = 'identity',width = 0.5) +
geom_text(y = 100, vjust = 0.15, size = 5) + theme_xf +
labs(x = NULL, y = 'percentage', title = 'Change of gene near enhancers') +
scale_x_discrete(labels = c('Genes near increase enhancer',
'Genes near NC enhancer',
'Genes near Decrease enhancer')) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p + geom_bar(stat = 'identity',width = 0.5) +
geom_text(y = 100, vjust = 0.15, size = 5) + theme_xf +
labs(x = NULL, y = 'percentage', title = 'Change of gene near enhancers') +
scale_x_discrete(labels = c('Genes near \n increase enhancer',
'Genes near \n NC enhancer',
'Genes near \n Decrease enhancer')) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p + geom_bar(stat = 'identity',width = 0.5) +
geom_text(y = 100, vjust = 0.15, size = 5) + theme_xf +
labs(x = NULL, y = 'percentage', title = 'Change of gene near enhancers') +
scale_x_discrete(labels = c('Genes near \n increase enhancer',
'Genes near \n NC enhancer',
'Genes near \n Decrease enhancer'))
ggsave(filename = 'figures/Genes_near_enhancers.jpg', width = 8, height = 8, dpi = 150, units = 'in')
length(inhancers)
length(enhancers)
table(enhancers$regulation)
temp <- genes[unique(nearest(enhancers[enhancers$regulation == 'NC'],genes))]$regulation %>% table
temp1 <- genes[unique(nearest(enhancers[enhancers$regulation == 'Increase'],genes))]$regulation %>% table
temp2 <- genes[unique(nearest(enhancers[enhancers$regulation == 'Decrease'],genes))]$regulation %>% table
count <- rbind(NC.e = temp, Increase.e = temp1, Decrease.e = temp2) %>% as.data.table()
count[,`:=`(enhancer = c('NC','Increase','Decrease') , sum = rowSums(count)/100)]
count[,`:=`(Increase = round(Increase/sum,2),
Decrease = round(Decrease/sum,2),
NC = round(NC/sum,2))]
count <- melt(count, id.vars = c('enhancer','sum'))
count[,`:=`(enhancer = factor(enhancer, levels = c('Increase','NC','Decrease')),
variable = factor(variable, levels = c('Increase','NC','Decrease')))]
p <- ggplot(count, aes(x = enhancer,y=value, fill = variable, label = sum*100))
p + geom_bar(stat = 'identity',width = 0.5) +
geom_text(y = 100, vjust = 0.15, size = 5) + theme_xf +
labs(x = NULL, y = 'percentage', title = 'Change of gene near enhancers') +
scale_x_discrete(labels = c('Genes near \n increase enhancer',
'Genes near \n NC enhancer',
'Genes near \n Decrease enhancer'))
ggsave(filename = 'figures/Genes_near_enhancers.jpg', width = 8, height = 8, dpi = 150, units = 'in')
# ChIAPET_analysis --------------------------------------------------------
interaction <- fread('coordinates/Hela_hg19.ChromatinInteractons.bed', sep = '\t', header = F)
# ChIAPET_analysis --------------------------------------------------------
interaction <- fread('coordinates/Hela_hg19.ChromatinInteractons.bed', sep = '\t', header = F)
interaction <- interaction$V4 %>% unique()
interaction.left <- str_extract(interaction,'.*-')
head(interaction.left)
interaction.left <- data.table(chr = str_extract(interaction.left, 'chr\\d*'),
start = str_replace(str_extract(interaction.left,':\\d*'),":",""),
end = str_replace(str_extract(interaction.left,'\\d*-'),"-",""))
head(interaction.left)
interaction <- interaction$V4 %>% unique()
interaction.left <- str_extract(interaction,'.*-')
# ChIAPET_analysis --------------------------------------------------------
interaction <- fread('coordinates/Hela_hg19.ChromatinInteractons.bed', sep = '\t', header = F)
interaction <- interaction$V4 %>% unique()
interaction.left <- str_extract(interaction,'.*-')
interaction.left <- data.table(chr = str_extract(interaction.left, 'chr\\d*'),
start = str_replace(str_extract(interaction.left,':\\d*'),":",""),
end = str_replace(str_extract(interaction.left,'\\d*-'),"-","")) %>% makeGRangesFromDataFrame()
head(interaction)
interaction.right <- str_extract(interaction,'-.*')
head(interaction.right)
interaction.right <- data.table(chr = str_extract(interaction.right, 'chr\\d*'),
start = str_replace(str_extract(interaction.right,':\\d*'),":",""),
end = str_replace(str_extract(interaction.right,'\\d*,'),",","")) %>% makeGRangesFromDataFrame()
head(interaction.right)
findOverlaps(interaction.left,interaction.right)
length(interaction)
length(interaction.left)
interaction.left[11]
interaction.right[30457]
test <- findOverlaps(interaction.left,enhancers) %>% from
head(interaction.left)
unique(test) %>% length()
length(interaction.left)
seqinfo(interaction.left)
interaction.left <- str_extract(interaction,'.*-')
interaction.left <- data.table(chr = str_extract(interaction.left, 'chr\\[\\d*\\|X\\|Y\\]'),
start = str_replace(str_extract(interaction.left,':\\d*'),":",""),
end = str_replace(str_extract(interaction.left,'\\d*-'),"-","")) %>% makeGRangesFromDataFrame()
interaction.left <- str_extract(interaction,'.*-')
interaction.left <- data.table(chr = str_extract(interaction.left, 'chr[\\d*|X|Y]'),
start = str_replace(str_extract(interaction.left,':\\d*'),":",""),
end = str_replace(str_extract(interaction.left,'\\d*-'),"-","")) %>% makeGRangesFromDataFrame()
seqinfo(interaction.left)
head(interaction)
interaction.left <- str_extract(interaction,'.*-')
interaction.left <- data.table(chr = str_replace(str_extract(interaction.left, 'chr.*:'),':',''),
start = str_replace(str_extract(interaction.left,':\\d*'),":",""),
end = str_replace(str_extract(interaction.left,'\\d*-'),"-","")) %>% makeGRangesFromDataFrame()
seqinfo(interaction.left)
interaction.left <- str_extract(interaction,'.*-')
interaction.left <- data.table(chr = str_replace(str_extract(interaction.left, 'chr.*:'),':',''),
start = str_replace(str_extract(interaction.left,':\\d*'),":",""),
end = str_replace(str_extract(interaction.left,'\\d*-'),"-","")) %>% makeGRangesFromDataFrame()
interaction.right <- str_extract(interaction,'-.*')
interaction.right <- data.table(chr = str_replace(str_extract(interaction.left, 'chr.*:'),':',''),
start = str_replace(str_extract(interaction.right,':\\d*'),":",""),
end = str_replace(str_extract(interaction.right,'\\d*,'),",","")) %>% makeGRangesFromDataFrame()
paste0('P',NA)
paste0(c('E','P'),c(NA,NA))
promoters(genes) %>% head()
count <- data.table(left = rep(NA,length(interaction.left)), right = rep(NA, length(interaction.right)))
count[unique(from(findOverlaps(interaction.left,enhancers))),left := 'E']
unique(from(findOverlaps(interaction.left,enhancers))) %>% head()
count$left[unique(from(findOverlaps(interaction.left,enhancers)))] <- 'E'
count$left[unique(from(findOverlaps(interaction.left,promoters(genes))))] <- 'P'
count$left[unique(from(findOverlaps(interaction.left,enhancers)))] <- 'E'
count$left[unique(from(findOverlaps(interaction.left,promoters(genes))))] <- 'P'
count$right[unique(from(findOverlaps(interaction.right,enhancers)))] <- 'E'
count$right[unique(from(findOverlaps(interaction.right,promoters(genes))))] <- 'P'
table(count$left)
table(count$right)
count <- data.table(left = rep(NA,length(interaction.left)), right = rep(NA, length(interaction.right)))
head(count)
count$left[unique(from(findOverlaps(interaction.left,enhancers)))] <- 'E'
count$left[unique(from(findOverlaps(interaction.left,promoters(genes))))] <- 'P'
count$right[unique(from(findOverlaps(interaction.right,enhancers)))] <- 'E'
count$right[unique(from(findOverlaps(interaction.right,promoters(genes))))] <- 'P'
head(count)
count[,type:=paste0(left,'-',right)]
table(count$type)
count[type = 'P-E', type:= 'E-P']
count[type = 'NA-P', type:= 'P-NA']
count[type == 'P-E', type:= 'E-P']
count[type == 'NA-P', type:= 'P-NA']
count[type == 'NA-E', type:= 'E-NA']
table(count)
table(count$type)
plot.table <- count[,.(.N),by = type]
plot.table
plot.table$type <- factor(plot.table$type,levels = c('E-P','E-E','P-P','E-NA','P-NA','NA-NA'))
p <- plot_ly(count,labels = ~type, values = ~N, type = 'pie',
textposition = 'outside',
textinfo = 'percent',
marker = list(colors = colors,
line = list(color = '#FFFFFF',
width = 1)))
p <- layout(p,
title = 'Distribution of GRO-seq reads on genomic elements',
margin = list(l=100,t=80,b=50),
showlegend = T)
library(plotly)
plot.table$type <- factor(plot.table$type,levels = c('E-P','E-E','P-P','E-NA','P-NA','NA-NA'))
p <- plot_ly(count,labels = ~type, values = ~N, type = 'pie',
textposition = 'outside',
textinfo = 'percent',
marker = list(colors = colors,
line = list(color = '#FFFFFF',
width = 1)))
p <- layout(p,
title = 'type of ChIA-PET interactions',
margin = list(l=100,t=80,b=50),
showlegend = T)
p
plot.table <- count[,.(.N),by = type]
plot.table$type <- factor(plot.table$type,levels = c('E-P','E-E','P-P','E-NA','P-NA','NA-NA'))
p <- plot_ly(count,labels = ~type, values = ~N, type = 'pie',
textposition = 'outside',
textinfo = 'percent',
marker = list(colors = colors,
line = list(color = '#FFFFFF',
width = 1)))
p <- layout(p,
title = 'type of ChIA-PET interactions',
margin = list(l=100,t=80,b=50),
showlegend = T)
p
plot.table
colnames(plot.table) <- c('type','count')
plot.table <- count[,.(.N),by = type]
colnames(plot.table) <- c('type','count')
plot.table$type <- factor(plot.table$type,levels = c('E-P','E-E','P-P','E-NA','P-NA','NA-NA'))
p <- plot_ly(count,labels = ~type, values = ~count, type = 'pie',
textposition = 'outside',
textinfo = 'percent',
marker = list(colors = colors,
line = list(color = '#FFFFFF',
width = 1)))
p <- layout(p,
title = 'type of ChIA-PET interactions',
margin = list(l=100,t=80,b=50),
showlegend = T)
p
plotly_IMAGE(p, width = 700, height = 700, out_file = 'figures/test.png')
#If error, need:
Sys.setenv("plotly_username"="Feng_Xiong")
Sys.setenv("plotly_api_key"="cKUazDNFFbwzc7m8EGdj")
plotly_IMAGE(p, width = 700, height = 700, out_file = 'figures/test.png')
?pie
pie(plot.table$count,labels = plot.table$type)
pie(plot.table$count,labels = paste0(plot.table$type,count))
pie(plot.table$count,labels = paste0(plot.table$type,plot.table$count))
pie(plot.table$count,labels = paste0(plot.table$type,'(',plot.table$count),')')
pie(plot.table$count,labels = paste0(plot.table$type,'(',plot.table$count,')'))
plot.table <- count[,.(.N),by = type]
colnames(plot.table) <- c('type','count')
plot.table$type <- factor(plot.table$type,levels = c('E-P','E-E','P-P','E-NA','P-NA','NA-NA'))
p <- plot_ly(count,labels = ~type, values = ~count, type = 'pie',
textposition = 'outside',
textinfo = 'percent',
marker = list(colors = colors,
line = list(color = '#FFFFFF',
width = 1)))
p <- layout(p,
title = 'type of ChIA-PET interactions',
margin = list(l=100,t=80,b=50),
showlegend = T)
p
p <- layout(p,
title = 'type of ChIA-PET interactions')
p
p <- plot_ly(plot.table,labels = ~type, values = ~count, type = 'pie',
textposition = 'outside',
textinfo = 'percent',
marker = list(colors = colors,
line = list(color = '#FFFFFF',
width = 1)))
p <- layout(p,
title = 'type of ChIA-PET interactions')
p
p <- plot_ly(plot.table,labels = ~type, values = ~count, type = 'pie',
textposition = 'outside',
textinfo = 'percent + label + value',
marker = list(colors = colors,
line = list(color = '#FFFFFF',
width = 1)))
p <- layout(p,
title = 'type of ChIA-PET interactions')
p
p <- plot_ly(plot.table,labels = ~type, values = ~count, type = 'pie',
textposition = 'outside',
textinfo = 'percent +label+value',
marker = list(colors = colors,
line = list(color = '#FFFFFF',
width = 1)))
p <- layout(p,
title = 'type of ChIA-PET interactions')
p
p <- plot_ly(plot.table,labels = ~type, values = ~count, type = 'pie',
textposition = 'outside',
textinfo = 'percent+label+value',
marker = list(colors = colors,
line = list(color = '#FFFFFF',
width = 1)))
p <- layout(p,
title = 'type of ChIA-PET interactions')
p
plotly_IMAGE(p, width = 700, height = 700, out_file = 'figures/test.png')
p <- layout(p,
title = 'type of ChIA-PET interactions',
margin = list(l=100,t=80,b=100),
showlegend = T)
p
plotly_IMAGE(p, width = 700, height = 700, out_file = 'figures/ChIA-PET_interaction.png')
head(count)
length(count)
nrow(count)
<<<<<<< HEAD
# Load packages and functions needed ---------------------------------------------------
=======
>>>>>>> 6f9988533ba3507611c032c89722fc81e51baa06
library(GenomicRanges)
library(magrittr)
library(ggplot2)
library(data.table)
library(RColorBrewer)
library(stringr)
require(TxDb.Hsapiens.UCSC.hg19.knownGene)
require(org.Hs.eg.db)
<<<<<<< HEAD
=======
for(i in list.files('r.func/')){
load(paste0('r.func/',i))
}
head(interaction)
head(count)
head(enhancers)
count <- data.table(left = rep(NA,length(interaction.left)), right = rep(NA, length(interaction.right)))
count$left[unique(from(findOverlaps(interaction.left,enhancers)))] <- 'E'
count$left[unique(from(findOverlaps(interaction.left,promoters(genes))))] <- 'P'
count$right[unique(from(findOverlaps(interaction.right,enhancers)))] <- 'E'
count$right[unique(from(findOverlaps(interaction.right,promoters(genes))))] <- 'P'
head(count)
count[,type:=paste0(left,'-',right)]
head(count)
EPinteraction.e <- interaction.left[count$type == 'E-P']
EPinteraction.e <- interaction.left[count$type == 'E-P'] %>% c(interaction.right[count$type == 'P-E'])
EPinteraction.p <- interaction.right[count$type == 'E-P'] %>% c(interaction.left[count$type == 'P-E'])
length(EPinteraction.e)
length(EPinteraction.p)
temp <- findOverlaps(EPinteraction.e,enhancers)
head(temp)
head(EPinteraction.e)
head(enhancers)
temp1 <- data.table(interaction.e = from(temp),regulation = enhancers$regulation[to(temp)])
head(temp1)
head(temp)
>>>>>>> 6f9988533ba3507611c032c89722fc81e51baa06
# Load packages and functions needed ---------------------------------------------------
library(GenomicRanges)
library(magrittr)
library(ggplot2)
library(data.table)
library(RColorBrewer)
library(stringr)
require(TxDb.Hsapiens.UCSC.hg19.knownGene)
require(org.Hs.eg.db)
# ChIA-PET E-P interaction ------------------------------------------------
count <- data.table(left = rep(NA,length(interaction.left)), right = rep(NA, length(interaction.right)))
count$left[unique(from(findOverlaps(interaction.left,enhancers)))] <- 'E'
count$left[unique(from(findOverlaps(interaction.left,promoters(genes))))] <- 'P'
count$right[unique(from(findOverlaps(interaction.right,enhancers)))] <- 'E'
count$right[unique(from(findOverlaps(interaction.right,promoters(genes))))] <- 'P'
count[,type:=paste0(left,'-',right)]
EPinteraction.e <- interaction.left[count$type == 'E-P'] %>% c(interaction.right[count$type == 'P-E'])
EPinteraction.p <- interaction.right[count$type == 'E-P'] %>% c(interaction.left[count$type == 'P-E'])
temp <- findOverlaps(EPinteraction.e,enhancers)
temp1 <- data.table(interaction.e = from(temp),e.regulation = enhancers$regulation[to(temp)])
temp <- findOverlaps(EPinteraction.e,enhancers)
temp2 <- data.table(interaction.e = from(temp),g.regulation = enhancers$regulation[to(temp)])
head(temp1)
head(temp2)
temp <- findOverlaps(EPinteraction.e,enhancers)
temp1 <- data.table(interaction.e = from(temp),e.regulation = enhancers$regulation[to(temp)])
temp <- findOverlaps(EPinteraction.p,promoters(genes))
temp2 <- data.table(interaction.p = from(temp),p.regulation = genes$regulation[to(temp)])
head(temp1)
head(temp2)
temp <- merge(temp1, temp2, by.x = 'interaction.e',by.y ='interaction.p',all = T)
head(temp)
temp$type <- paste0(temp$e.regulation,'-',temp$p.regulation)
table(temp$type)
p <- ggplot(temp, aes(x = e.regulation, y = interaction.e, fill = p.regulation))
p + geom_bar()
p + geom_bar(stat = 'count')
plot.table <- temp[,.(.N), by = .(e.regulation,p.regulation)]
plot.table
p.regulation = factor(p.regulation, levels = c('Increase','NC','Decrease'))]
plot.table[,`:=`(e.regulation = factor(e.regulation, levels = c('Increase','NC','Decrease')),
p.regulation = factor(p.regulation, levels = c('Increase','NC','Decrease')))]
p <- ggplot(temp, aes(x = e.regulation, y = interaction.e, fill = p.regulation))
p + geom_bar(stat = 'identity')
p <- ggplot(temp, aes(x = e.regulation, y = N, fill = p.regulation))
p + geom_bar(stat = 'identity')
plot.table
table(plot.table$e.regulation)
plot.table <- plot.table[order(e.regulation,p.regulation)]
plot.table
plot.table$sum <- c(rep(sum(plot.table$N[1:3]),3),
rep(sum(plot.table$N[4:6]),3),
rep(sum(plot.table$N[7:9]),3))
plot.table
plot.table[,Perc:= N/sum]
plot.table
p <- ggplot(temp, aes(x = e.regulation, y = Perc, fill = p.regulation))
p + geom_bar(stat = 'identity')
p <- ggplot(plot.table, aes(x = e.regulation, y = Perc, fill = p.regulation))
p + geom_bar(stat = 'identity')
p + geom_bar(stat = 'identity') + geom_text(aes(label = sum), vjust = 0.1)
p + geom_bar(stat = 'identity') + geom_text(aes(y=1,label = sum), vjust = 0.1)
p + geom_bar(stat = 'identity') + geom_text(aes(y=100,label = sum), vjust = 0.1)
p + geom_bar(stat = 'identity') + geom_text(aes(y=100,label = sum), vjust = 0.1)
p <- ggplot(plot.table, aes(x = e.regulation, y = Perc*100, fill = p.regulation))
p + geom_bar(stat = 'identity') + geom_text(aes(y=100,label = sum), vjust = 0.1)
p + geom_bar(stat = 'identity') + geom_text(aes(y=101,label = sum), vjust = 0.1)
p + geom_bar(stat = 'identity') + geom_text(aes(y=101,label = sum), vjust = 0.1)+theme_xf
p + geom_bar(stat = 'identity') + geom_text(aes(y=101,label = sum), vjust = 0.1)+theme_xf +
labs(x = NULL, y = 'percentage', title = 'Change of gene targeted by enhancers') +
scale_x_discrete(labels = c('Genes targeted \n increase enhancer',
'Genes near \n NC enhancer',
'Genes near \n Decrease enhancer'))
source('C:/Feng/Groseq_pipeline/DiffGeneCat.R')
rm(plot)
ggsave(filename = 'figures/Genes_targeted_by_enhancer_ChiAPET.jpg', width = 8, height = 8, dpi = 150, units = 'in')
head(res.deseq2)
title <- 'siTIP60'
counttable.raw.file <-  'TIP60.raw.counttable.txt'
coordinate.file <-  'coordinates/Hela.transcripts.all.gtf'
groups <- c('siCTL','siCTL','siTIP60','siTIP60')
groupn <- length(groups)
min.rpkm <- 0.1
write.csv(res.deseq2, file = 'res.deseq2.csv')
oncogenes <- fread('coordinates/Cosmic.CancerGeneCensus.all.gene.anno.tsv')
library(GenomicRanges)
library(magrittr)
library(ggplot2)
library(data.table)
library(RColorBrewer)
library(stringr)
require(TxDb.Hsapiens.UCSC.hg19.knownGene)
require(org.Hs.eg.db)
for(i in list.files('r.func/')){
load(paste0('r.func/',i))
}
oncogenes <- fread('coordinates/Cosmic.CancerGeneCensus.all.gene.anno.tsv')
head(oncogenes)
res.deseq2$onco <- F
head(res.deseq2)
head(res.deseq2[gene_type == 'protein_coding',])
res.deseq2[gene_name %in% oncogenes$`Gene Symbol`, onco:='T']
res.deseq2[res.deseq2$gene_name %in% oncogenes$`Gene Symbol`, onco:='T']
res.deseq2$gene_name %in% oncogenes$`Gene Symbol` %>% head()
res.deseq2$onco <- F
res.deseq2[res.deseq2$gene_name %in% oncogenes$`Gene Symbol`, onco:='T']
res.deseq2$onco[res.deseq2$gene_name %in% oncogenes$`Gene Symbol`] <- 'T'
write.csv(res.deseq2, file = 'res.deseq2.csv')
table(res.deseq2$onco)
temp <- res.deseq2[gene_type == 'protein_coding',.(N), by = .(regulation,onco)]
temp <- res.deseq2[gene_type == 'protein_coding',.(.N), by = .(regulation,onco)]
temp
genes.region <- genes(TxDb.Hsapiens.UCSC.hg19.knownGene)
exons.region <- exons(TxDb.Hsapiens.UCSC.hg19.knownGene)
test <- findOverlaps(genes.region,exons.region) %>% as.data.table()
test <- test[,.N, by = queryHits]
exon.count <- data.table(ENTREZID=genes.region$gene_id, exon.n = test$N)
head(exon.count)
exon.count <- data.table(ENTREZID=genes.region$gene_id, exon.n = test$N)
plot.table <- res.deseq2[gene_type == 'protein_coding' & seqnames != 'chrM',]
temp <- AnnotationDbi::select(org.Hs.eg.db,plot.table$gene_name,'ENTREZID',keytype = 'SYMBOL')
plot.table <- merge(plot.table, temp,by.x = 'gene_name',by.y ='SYMBOL',all.x = F,all.y =F)
plot.table <- merge(plot.table,exon.count,by = 'ENTREZID',all.x = T, all.y = F)
head(plot.table)
mean(plot.table$exon.n[plot.table$onco == T], na.rm =T)
table(plot.table$exon.n[plot.table$onco == T])
(plot.table$exon.n[plot.table$onco == T]
)
(plot.table$exon.n[plot.table$onco == 'T']
)
mean(plot.table$exon.n[plot.table$onco == 'T'], na.rm =T)
temp <- plot.table[gene_type == 'protein_coding',.(.N),by = .(exon.n,onco)]
temp
temp <- plot.table[gene_type == 'protein_coding',.(.N),by = .(exon.n,onco)]
temp <- plot.table
temp$exon.n[temp$exon.n > 30] <- 30
temp <- temp[gene_type == 'protein_coding',.(.N),by = .(exon.n,onco)]
head(temp)
temp <- plot.table
temp$exon.n[temp$exon.n >= 30] <- 30
table(temp$exon.n)
