plot.dt <- data.table(siCTL = colSums(siCTL.mx[index,])/length(temp[index]),
siTIP60 = colSums(siTIP60.mx[index,])/length(temp[index]))
MxProfilePlot(plot.dt, breaks =c(1,61,261,320)) +
scale_color_manual(values = c('firebrick2','royalblue2'))+
labs(title = name) +
theme(plot.title = element_text(hjust = 0.5))
ggsave(figurefile, height = 6, width = 8, dpi = 150, units = 'in')
}
#NC_coding_genes
temp <- res.deseq2[gene_type == 'protein_coding' & regulation == 'NC',] %>% makeGRangesFromDataFrame()
GR2BED(temp,'coordinates/NC_genes_siTIP60.bed')
GROPlotonTemp(temp,'NC_genes','NC_protein_coding_genes','figures/GRO-seq_on_NC_protein_coding.jpg')
GROPlotonTemp <- function(gr,inputfix,name,figurefile){
Direction2Gene(paste0('matrix/Hela-siCTL-rpt1-GROpos_',inputfix,'_scaled.mx'),
paste0('matrix/Hela-siCTL-rpt1-GROneg_',inputfix,'_scaled.mx'),
temp,'siCTL-rpt1')
Direction2Gene(paste0('matrix/Hela-siTIP60-rpt1-GROpos_',inputfix,'_scaled.mx'),
paste0('matrix/Hela-siTIP60-rpt1-GROneg_',inputfix,'_scaled.mx'),
temp,'siTIP60-rpt1')
index <- seqnames(temp) != 'chrM'
plot.dt <- data.table(siCTL = colSums(`siCTL-rpt1.sense.mx`[index,])/length(temp[index]),
siCTL_AS = -colSums(`siCTL-rpt1.antisense.mx`[index,])/length(temp[index]),
siTIP60 = colSums(`siTIP60-rpt1.sense.mx`[index,])/length(temp[index]),
siTIP_AS = -colSums(`siTIP60-rpt1.antisense.mx`[index,])/length(temp[index]))
MxProfilePlot(plot.dt, breaks =c(1,61,261,320)) +
scale_color_manual(values = c('firebrick2','firebrick3','royalblue2','royalblue3'))+
labs(title = name) +
theme(plot.title = element_text(hjust = 0.5))
ggsave(figurefile, height = 6, width = 8, dpi = 150, units = 'in')
}
ChIPPlotonTemp <- function(temp,antibody,inputfix,name,figurefile){
siCTL.mx <- ReadMatrix(paste0('matrix/Hela-',antibody,'-SC-siCTL_',inputfix,'_scaled.mx'))
siTIP60.mx <- ReadMatrix(paste0('matrix/Hela-',antibody,'-SC-siTIP60_',inputfix,'_scaled.mx'))
index <- seqnames(temp) != 'chrM'
plot.dt <- data.table(siCTL = colSums(siCTL.mx[index,])/length(temp[index]),
siTIP60 = colSums(siTIP60.mx[index,])/length(temp[index]))
MxProfilePlot(plot.dt, breaks =c(1,61,261,320)) +
scale_color_manual(values = c('firebrick2','royalblue2'))+
labs(title = name) +
theme(plot.title = element_text(hjust = 0.5))
ggsave(figurefile, height = 6, width = 8, dpi = 150, units = 'in')
}
temp <- res.deseq2[gene_type == 'protein_coding' & regulation == 'NC',] %>% makeGRangesFromDataFrame()
GROPlotonTemp(temp,'NC_genes','NC_protein_coding_genes','figures/GRO-seq_on_NC_protein_coding.jpg')
head(index)
test <- ReadMatrix('matrix/Hela-siCTL-rpt1-GROpos_NC_genes_scaled.mx)
)
000
''
"
q()
'
test <- ReadMatrix('matrix/Hela-siCTL-rpt1-GROpos_NC_genes_scaled.mx')
test[index,] %>% head
test[as.vector(index),] %>% head
index <- seqnames(temp) != 'chrM' %>% as.vector()
GROPlotonTemp <- function(gr,inputfix,name,figurefile){
Direction2Gene(paste0('matrix/Hela-siCTL-rpt1-GROpos_',inputfix,'_scaled.mx'),
paste0('matrix/Hela-siCTL-rpt1-GROneg_',inputfix,'_scaled.mx'),
temp,'siCTL-rpt1')
Direction2Gene(paste0('matrix/Hela-siTIP60-rpt1-GROpos_',inputfix,'_scaled.mx'),
paste0('matrix/Hela-siTIP60-rpt1-GROneg_',inputfix,'_scaled.mx'),
temp,'siTIP60-rpt1')
index <- seqnames(temp) != 'chrM' %>% as.vector()
plot.dt <- data.table(siCTL = colSums(`siCTL-rpt1.sense.mx`[index,])/length(temp[index]),
siCTL_AS = -colSums(`siCTL-rpt1.antisense.mx`[index,])/length(temp[index]),
siTIP60 = colSums(`siTIP60-rpt1.sense.mx`[index,])/length(temp[index]),
siTIP_AS = -colSums(`siTIP60-rpt1.antisense.mx`[index,])/length(temp[index]))
MxProfilePlot(plot.dt, breaks =c(1,61,261,320)) +
scale_color_manual(values = c('firebrick2','firebrick3','royalblue2','royalblue3'))+
labs(title = name) +
theme(plot.title = element_text(hjust = 0.5))
ggsave(figurefile, height = 6, width = 8, dpi = 150, units = 'in')
}
ChIPPlotonTemp <- function(temp,antibody,inputfix,name,figurefile){
siCTL.mx <- ReadMatrix(paste0('matrix/Hela-',antibody,'-SC-siCTL_',inputfix,'_scaled.mx'))
siTIP60.mx <- ReadMatrix(paste0('matrix/Hela-',antibody,'-SC-siTIP60_',inputfix,'_scaled.mx'))
index <- seqnames(temp) != 'chrM'
plot.dt <- data.table(siCTL = colSums(siCTL.mx[index,])/length(temp[index]),
siTIP60 = colSums(siTIP60.mx[index,])/length(temp[index]))
MxProfilePlot(plot.dt, breaks =c(1,61,261,320)) +
scale_color_manual(values = c('firebrick2','royalblue2'))+
labs(title = name) +
theme(plot.title = element_text(hjust = 0.5))
ggsave(figurefile, height = 6, width = 8, dpi = 150, units = 'in')
}
temp <- res.deseq2[gene_type == 'protein_coding' & regulation == 'NC',] %>% makeGRangesFromDataFrame()
GROPlotonTemp(temp,'NC_genes','NC_protein_coding_genes','figures/GRO-seq_on_NC_protein_coding.jpg')
GROPlotonTemp <- function(gr,inputfix,name,figurefile){
Direction2Gene(paste0('matrix/Hela-siCTL-rpt1-GROpos_',inputfix,'_scaled.mx'),
paste0('matrix/Hela-siCTL-rpt1-GROneg_',inputfix,'_scaled.mx'),
temp,'siCTL-rpt1')
Direction2Gene(paste0('matrix/Hela-siTIP60-rpt1-GROpos_',inputfix,'_scaled.mx'),
paste0('matrix/Hela-siTIP60-rpt1-GROneg_',inputfix,'_scaled.mx'),
temp,'siTIP60-rpt1')
index <- seqnames(temp) != 'chrM' %>% as.logical()
plot.dt <- data.table(siCTL = colSums(`siCTL-rpt1.sense.mx`[index,])/length(temp[index]),
siCTL_AS = -colSums(`siCTL-rpt1.antisense.mx`[index,])/length(temp[index]),
siTIP60 = colSums(`siTIP60-rpt1.sense.mx`[index,])/length(temp[index]),
siTIP_AS = -colSums(`siTIP60-rpt1.antisense.mx`[index,])/length(temp[index]))
MxProfilePlot(plot.dt, breaks =c(1,61,261,320)) +
scale_color_manual(values = c('firebrick2','firebrick3','royalblue2','royalblue3'))+
labs(title = name) +
theme(plot.title = element_text(hjust = 0.5))
ggsave(figurefile, height = 6, width = 8, dpi = 150, units = 'in')
}
ChIPPlotonTemp <- function(temp,antibody,inputfix,name,figurefile){
siCTL.mx <- ReadMatrix(paste0('matrix/Hela-',antibody,'-SC-siCTL_',inputfix,'_scaled.mx'))
siTIP60.mx <- ReadMatrix(paste0('matrix/Hela-',antibody,'-SC-siTIP60_',inputfix,'_scaled.mx'))
index <- seqnames(temp) != 'chrM'
plot.dt <- data.table(siCTL = colSums(siCTL.mx[index,])/length(temp[index]),
siTIP60 = colSums(siTIP60.mx[index,])/length(temp[index]))
MxProfilePlot(plot.dt, breaks =c(1,61,261,320)) +
scale_color_manual(values = c('firebrick2','royalblue2'))+
labs(title = name) +
theme(plot.title = element_text(hjust = 0.5))
ggsave(figurefile, height = 6, width = 8, dpi = 150, units = 'in')
}
temp <- res.deseq2[gene_type == 'protein_coding' & regulation == 'NC',] %>% makeGRangesFromDataFrame()
GROPlotonTemp(temp,'NC_genes','NC_protein_coding_genes','figures/GRO-seq_on_NC_protein_coding.jpg')
index <- seqnames(temp) != 'chrM' %>% as.logical()
head(index)
index <- seqnames(temp) != 'chrM' %>% as.logical() %>% as.vector()
head(index)
index <- seqnames(temp) != 'chrM' %>% as.vector()
index
class(index)
inverse.rle(index)
index <- as.data.table(temp)$seqnames != 'chrM'
head(index)
GROPlotonTemp <- function(gr,inputfix,name,figurefile){
Direction2Gene(paste0('matrix/Hela-siCTL-rpt1-GROpos_',inputfix,'_scaled.mx'),
paste0('matrix/Hela-siCTL-rpt1-GROneg_',inputfix,'_scaled.mx'),
temp,'siCTL-rpt1')
Direction2Gene(paste0('matrix/Hela-siTIP60-rpt1-GROpos_',inputfix,'_scaled.mx'),
paste0('matrix/Hela-siTIP60-rpt1-GROneg_',inputfix,'_scaled.mx'),
temp,'siTIP60-rpt1')
index <- as.data.table(temp)$seqnames != 'chrM'
plot.dt <- data.table(siCTL = colSums(`siCTL-rpt1.sense.mx`[index,])/length(temp[index]),
siCTL_AS = -colSums(`siCTL-rpt1.antisense.mx`[index,])/length(temp[index]),
siTIP60 = colSums(`siTIP60-rpt1.sense.mx`[index,])/length(temp[index]),
siTIP_AS = -colSums(`siTIP60-rpt1.antisense.mx`[index,])/length(temp[index]))
MxProfilePlot(plot.dt, breaks =c(1,61,261,320)) +
scale_color_manual(values = c('firebrick2','firebrick3','royalblue2','royalblue3'))+
labs(title = name) +
theme(plot.title = element_text(hjust = 0.5))
ggsave(figurefile, height = 6, width = 8, dpi = 150, units = 'in')
}
ChIPPlotonTemp <- function(temp,antibody,inputfix,name,figurefile){
siCTL.mx <- ReadMatrix(paste0('matrix/Hela-',antibody,'-SC-siCTL_',inputfix,'_scaled.mx'))
siTIP60.mx <- ReadMatrix(paste0('matrix/Hela-',antibody,'-SC-siTIP60_',inputfix,'_scaled.mx'))
index <- seqnames(temp) != 'chrM'
plot.dt <- data.table(siCTL = colSums(siCTL.mx[index,])/length(temp[index]),
siTIP60 = colSums(siTIP60.mx[index,])/length(temp[index]))
MxProfilePlot(plot.dt, breaks =c(1,61,261,320)) +
scale_color_manual(values = c('firebrick2','royalblue2'))+
labs(title = name) +
theme(plot.title = element_text(hjust = 0.5))
ggsave(figurefile, height = 6, width = 8, dpi = 150, units = 'in')
}
GROPlotonTemp(temp,'NC_genes','NC_protein_coding_genes','figures/GRO-seq_on_NC_protein_coding.jpg')
ChIPPlotonTemp(temp,'H3K27ac','NC_genes','H3K27ac_NC_protein_coding_genes','figures/H3K27ac_on_NC_protein_coding.jpg')
ChIPPlotonTemp(temp,'H3K4me1','NC_genes','H3K4me1_NC_protein_coding_genes','figures/H3K4me1_on_NC_protein_coding.jpg')
ChIPPlotonTemp(temp,'Pol2','NC_genes','Pol2_NC_protein_coding_genes','figures/Pol2_on_NC_protein_coding.jpg')
ChIPPlotonTemp <- function(temp,antibody,inputfix,name,figurefile){
siCTL.mx <- ReadMatrix(paste0('matrix/Hela-',antibody,'-SC-siCTL_',inputfix,'_scaled.mx'))
siTIP60.mx <- ReadMatrix(paste0('matrix/Hela-',antibody,'-SC-siTIP60_',inputfix,'_scaled.mx'))
index <- as.data.table(temp)$seqnames != 'chrM'
plot.dt <- data.table(siCTL = colSums(siCTL.mx[index,])/length(temp[index]),
siTIP60 = colSums(siTIP60.mx[index,])/length(temp[index]))
MxProfilePlot(plot.dt, breaks =c(1,61,261,320)) +
scale_color_manual(values = c('firebrick2','royalblue2'))+
labs(title = name) +
theme(plot.title = element_text(hjust = 0.5))
ggsave(figurefile, height = 6, width = 8, dpi = 150, units = 'in')
}
ChIPPlotonTemp(temp,'H3K27ac','NC_genes','H3K27ac_NC_protein_coding_genes','figures/H3K27ac_on_NC_protein_coding.jpg')
ChIPPlotonTemp(temp,'H3K4me1','NC_genes','H3K4me1_NC_protein_coding_genes','figures/H3K4me1_on_NC_protein_coding.jpg')
ChIPPlotonTemp(temp,'Pol2','NC_genes','Pol2_NC_protein_coding_genes','figures/Pol2_on_NC_protein_coding.jpg')
temp <- res.deseq2[gene_type == 'protein_coding' & regulation == 'Increase',] %>% makeGRangesFromDataFrame()
GR2BED(temp,'coordinates/Increase_genes_siTIP60.bed')
GROPlotonTemp(temp,'Increase_genes','Increased_protein_coding_genes','figures/GRO-seq_on_increase_protein_coding.jpg')
ChIPPlotonTemp(temp,'H3K27ac','Increase_genes','H3K27ac_Increase_protein_coding_genes','figures/H3K27ac_on_Increase_protein_coding.jpg')
ChIPPlotonTemp(temp,'H3K4me1','Increase_genes','H3K4me1_Increase_protein_coding_genes','figures/H3K4me1_on_Increase_protein_coding.jpg')
ChIPPlotonTemp(temp,'Pol2','Increase_genes','Pol2_Increase_protein_coding_genes','figures/Pol2_on_Increase_protein_coding.jpg')
temp <- res.deseq2[gene_type == 'protein_coding' & regulation == 'Decrease',] %>% makeGRangesFromDataFrame()
GR2BED(temp,'coordinates/Decrease_genes_siTIP60.bed')
GROPlotonTemp(temp,'Decrease_genes','Decreased_protein_coding_genes','figures/GRO-seq_on_decrease_protein_coding.jpg')
ChIPPlotonTemp(temp,'H3K27ac','Decrease_genes','H3K27ac_Decrease_protein_coding_genes','figures/H3K27ac_on_Decrease_protein_coding.jpg')
ChIPPlotonTemp(temp,'H3K4me1','Decrease_genes','H3K4me1_Decrease_protein_coding_genes','figures/H3K4me1_on_Decrease_protein_coding.jpg')
ChIPPlotonTemp(temp,'Pol2','Decrease_genes','Pol2_Decrease_protein_coding_genes','figures/Pol2_on_Decrease_protein_coding.jpg')
genes.region <- genes(TxDb.Hsapiens.UCSC.hg19.knownGene)
exons.region <- exons(TxDb.Hsapiens.UCSC.hg19.knownGene)
test <- findOverlaps(genes.region,exons.region) %>% as.data.table()
test <- test[,.N, by = queryHits]
exon.count <- data.table(ENTREZID=genes.region$gene_id, exon.n = test$N)
plot.table <- res.deseq2[gene_type == 'protein_coding',]
temp <- AnnotationDbi::select(org.Hs.eg.db,plot.table$gene_name,'ENTREZID',keytype = 'SYMBOL')
plot.table <- merge(plot.table, temp,by.x = 'gene_name',by.y ='SYMBOL',all.x = F,all.y =F)
plot.table <- merge(plot.table,exon.count,by = 'ENTREZID',all.x = T, all.y = F)
plot.table$rpkm <- select(plot.table,contains('Homer')) %>% rowSums()*10E9/(plot.table$width*total.reads)
plot.table <- res.deseq2[gene_type == 'protein_coding' & seqnames != 'chrM',]
temp <- AnnotationDbi::select(org.Hs.eg.db,plot.table$gene_name,'ENTREZID',keytype = 'SYMBOL')
plot.table <- merge(plot.table, temp,by.x = 'gene_name',by.y ='SYMBOL',all.x = F,all.y =F)
plot.table <- merge(plot.table,exon.count,by = 'ENTREZID',all.x = T, all.y = F)
plot.table$rpkm <- select(plot.table,contains('Homer')) %>% rowSums()*10E9/(plot.table$width*total.reads)
p <- ggplot(plot.table,aes(x= regulation, y = rpkm))
p + geom_boxplot()
temp <- boxplot.stats(plot.table$rpkm)[c(1,5)]
p + geom_boxplot() + ylim(temp*1.05)
temp <- boxplot.stats(plot.table$rpkm)$stats[c(1,5)]
p + geom_boxplot() + ylim(temp*1.05)
p + geom_boxplot(outlier.shape = NA) + ylim(temp*1.05)
plot.table[,regulation := factor(regulation, levels = c('Decrease','NC','Increase'))]
p <- ggplot(plot.table,aes(x= regulation, y = rpkm))
temp <- boxplot.stats(plot.table$rpkm)$stats[c(1,5)]
p + geom_boxplot(outlier.shape = NA) + ylim(temp*1.05)
p + geom_boxplot(outlier.shape = NA) + ylim(temp*1.05) + theme_xf
p <- ggplot(plot.table,aes(x= regulation, y = rpkm, color = regulation))
temp <- boxplot.stats(plot.table$rpkm)$stats[c(1,5)]
p + geom_boxplot(outlier.shape = NA) + ylim(temp*1.05) + theme_xf
p + geom_boxplot(outlier.shape = NA, lwd =2) + ylim(temp*1.05) + theme_xf
p <- ggplot(plot.table,aes(x= regulation, y = rpkm))
temp <- boxplot.stats(plot.table$rpkm)$stats[c(1,5)]
p + geom_boxplot(outlier.shape = NA, lwd =1) + ylim(temp*1.05) + theme_xf
p + geom_boxplot(outlier.shape = NA, lwd =1) + ylim(temp*1.05) + theme_xf + labs(x =NULL)
p + geom_boxplot(outlier.shape = NA, lwd =1) + ylim(temp*1.05) + theme_xf + labs(title = 'Expression of protein coding genes',x =NULL)
p + geom_boxplot(outlier.shape = NA, lwd =1) +
ylim(temp*1.05) +
theme_xf +
labs(title = 'Expression of protein coding genes',x =NULL) +
theme(plot.title = element_text(hjust =0.5))
ggsave(filename = 'figures/Expression_boxplot_coding.jpg', width = 6, height = 6, dpi =150, units = 'in')
ggsave(filename = 'figures/Expression_boxplot_coding.jpg', width = 4, height = 4, dpi =150, units = 'in')
p <- ggplot(plot.table,aes(x= as.factor(exon.n), y = log2FoldChange))
p + geom_boxplot()
plot.table[exon.n > 30, exon.n := 30]
plot.table[!is.na(exon.n),]
plot.table <- plot.table[!is.na(exon.n),]
plot.table[,exon.n := as.character(exon.n)][exon.n == '30', exon.n := '>= 30']
table(plot.table$exon.n)
plot.table[exon.n == '>= 30', exon.n := '30+']
table(plot.table$exon.n)
plot.table[,exon.n := factor(exon.n,levels = c(as.character(1:29),'30+'))]
table(plot.table$exon.n)
plot.table <- plot.table[,.(Mean = mean(log2FoldChange),SD = sd(log2FoldChange)), by = exon.n]
plot.table
plot.table <- res.deseq2[gene_type == 'protein_coding' & seqnames != 'chrM',]
temp <- AnnotationDbi::select(org.Hs.eg.db,plot.table$gene_name,'ENTREZID',keytype = 'SYMBOL')
plot.table <- merge(plot.table, temp,by.x = 'gene_name',by.y ='SYMBOL',all.x = F,all.y =F)
plot.table <- merge(plot.table,exon.count,by = 'ENTREZID',all.x = T, all.y = F)
plot.table$rpkm <- select(plot.table,contains('Homer')) %>% rowSums()*10E9/(plot.table$width*total.reads)
plot.table[,regulation := factor(regulation, levels = c('Decrease','NC','Increase'))]
plot.table[exon.n > 30, exon.n := 30]
plot.table <- plot.table[!is.na(exon.n),]
plot.table[,exon.n := as.character(exon.n)][exon.n == '30', exon.n := '30+']
plot.table[,exon.n := factor(exon.n,levels = c(as.character(1:29),'30+'))]
test <- plot.table[,.(Mean = mean(log2FoldChange),SD = se(log2FoldChange)), by = exon.n]
test <- plot.table[,.(.N,Mean = mean(log2FoldChange),SD = se(log2FoldChange)), by = exon.n]
test <- plot.table[,.(.N,Mean = mean(log2FoldChange),SD = sd(log2FoldChange)), by = exon.n]
test
test[order(-Mean)]
test <- plot.table[,.(.N,Mean = median(log2FoldChange),SD = sd(log2FoldChange)), by = exon.n]
test[order(-Mean)]
plot.table <- res.deseq2[gene_type == 'protein_coding' & seqnames != 'chrM',]
plot.table[exon.n > 30, exon.n := 30]
plot.table <- plot.table[!is.na(exon.n),]
plot.table <- res.deseq2[gene_type == 'protein_coding' & seqnames != 'chrM',]
plot.table$rpkm <- select(plot.table,contains('Homer')) %>% rowSums()*10E9/(plot.table$width*total.reads)
plot.table[,regulation := factor(regulation, levels = c('Decrease','NC','Increase'))]
p <- ggplot(plot.table,aes(x= regulation, y = rpkm))
temp <- boxplot.stats(plot.table$rpkm)$stats[c(1,5)]
p + geom_boxplot(outlier.shape = NA, lwd =1) +
ylim(temp*1.05) +
theme_xf +
labs(title = 'Expression of protein coding genes',x =NULL) +
theme(plot.title = element_text(hjust =0.5))
genes.region <- genes(TxDb.Hsapiens.UCSC.hg19.knownGene)
exons.region <- exons(TxDb.Hsapiens.UCSC.hg19.knownGene)
test <- findOverlaps(genes.region,exons.region) %>% as.data.table()
test <- test[,.N, by = queryHits]
exon.count <- data.table(ENTREZID=genes.region$gene_id, exon.n = test$N)
plot.table <- res.deseq2[gene_type == 'protein_coding' & seqnames != 'chrM',]
temp <- AnnotationDbi::select(org.Hs.eg.db,plot.table$gene_name,'ENTREZID',keytype = 'SYMBOL')
plot.table <- merge(plot.table, temp,by.x = 'gene_name',by.y ='SYMBOL',all.x = F,all.y =F)
plot.table <- merge(plot.table,exon.count,by = 'ENTREZID',all.x = T, all.y = F)
plot.table[exon.n > 30, exon.n := 30]
plot.table <- plot.table[!is.na(exon.n),]
plot.table[,exon.n := as.character(exon.n)][exon.n == '30', exon.n := '30+']
plot.table[,exon.n := factor(exon.n,levels = c(as.character(1:29),'30+'))]
test <- plot.table[,.(.N,Mean = median(log2FoldChange),SD = sd(log2FoldChange)), by = exon.n]
p <- ggplot(plot.table,aes(x= as.factor(exon.n), y = log2FoldChange))
p + geom_boxplot()
test
# Load packages and functions needed ---------------------------------------------------
library(GenomicRanges)
library(magrittr)
library(ggplot2)
library(data.table)
library(RColorBrewer)
library(stringr)
require(TxDb.Hsapiens.UCSC.hg19.knownGene)
require(org.Hs.eg.db)
#exons.
genes.region <- genes(TxDb.Hsapiens.UCSC.hg19.knownGene)
exons.region <- exons(TxDb.Hsapiens.UCSC.hg19.knownGene)
ImportBiopacks('TxDb.Hsapiens.UCSC.hg19.knownGene')
require(org.Hs.eg.db)
ImportBiopacks('org.Hs.eg.db')
install.packages('mgcv')
install.packages('rpart')
#exons.
genes.region <- genes(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(org.Hs.eg.db)
#exons.
genes.region <- genes(TxDb.Hsapiens.UCSC.hg19.knownGene)
exons.region <- exons(TxDb.Hsapiens.UCSC.hg19.knownGene)
test <- findOverlaps(genes.region,exons.region) %>% as.data.table()
test <- test[,.N, by = queryHits]
exon.count <- data.table(ENTREZID=genes.region$gene_id, exon.n = test$N)
plot.table <- res.deseq2[gene_type == 'protein_coding' & seqnames != 'chrM',]
temp <- AnnotationDbi::select(org.Hs.eg.db,plot.table$gene_name,'ENTREZID',keytype = 'SYMBOL')
plot.table <- merge(plot.table, temp,by.x = 'gene_name',by.y ='SYMBOL',all.x = F,all.y =F)
plot.table <- merge(plot.table,exon.count,by = 'ENTREZID',all.x = T, all.y = F)
head(plot.table)
plot.table[exon.n > 30, exon.n := 30]
plot.table <- plot.table[!is.na(exon.n),]
plot.table[,exon.n := as.character(exon.n)][exon.n == '30', exon.n := '30+']
plot.table[,exon.n := factor(exon.n,levels = c(as.character(1:29),'30+'))]
p <- ggplot(plot.table,aes(x= exon.n, y = log2FoldChange))
p + geom_boxplot()
test <- plot.table[,.(.N,Mean = median(log2FoldChange),SD = sd(log2FoldChange)), by = exon.n]
test
test[,se:= SD/sqrt(N)]
test
p + geom_line()
p + geom_point()
test
p <- ggplot(test, aes(x = exon.n, y = Mean))
p + geom_point()
p + geom_point() + ylim(-0.5,0.2)
p + geom_point() + geom_errorbar(aes(ymin = Mean-se, ymax = Mean + se),width = .2)
p + geom_point() + geom_errorbar(aes(ymin = Mean-se, ymax = Mean + se),width = .2) +
geom_text(aes(label = N),vjust = -1)
p + geom_point() + geom_errorbar(aes(ymin = Mean-se, ymax = Mean + se),width = .2) +
geom_text(aes(label = N),vjust = -2)
p + geom_point() + geom_errorbar(aes(ymin = Mean-se, ymax = Mean + se),width = .2) +
geom_text(aes(label = N),vjust = -3)
p + geom_point() + geom_errorbar(aes(ymin = Mean-se, ymax = Mean + se),width = .2) +
geom_text(aes(label = N),vjust = -3,size = 1)
p + geom_point() + geom_errorbar(aes(ymin = Mean-se, ymax = Mean + se),width = .2) +
geom_text(aes(label = N),vjust = -3,size = 5)
p + geom_point() + geom_errorbar(aes(ymin = Mean-se, ymax = Mean + se),width = .2) +
geom_text(aes(label = N),vjust = -3,size = 2)
p + geom_point() + geom_errorbar(aes(ymin = Mean-se, ymax = Mean + se),width = .2) +
geom_text(aes(label = N),vjust = -3,size = 3)
p + geom_point() + geom_errorbar(aes(ymin = Mean-se, ymax = Mean + se),width = .2) +
geom_text(aes(label = N),vjust = -3,size = 3) +
labs(y = 'Mean log2FC change')
p + geom_point() + geom_errorbar(aes(ymin = Mean-se, ymax = Mean + se),width = .2) +
geom_text(aes(label = N),vjust = -3,size = 3) +
labs(y = 'Mean log2FC change', x = 'Exon number') +
theme_xf
p + geom_point() + geom_errorbar(aes(ymin = Mean-se, ymax = Mean + se),width = .2) +
geom_text(aes(label = N),vjust = -3,size = 3) +
labs(y = 'Mean log2FC change', x = 'Exon number', title = 'Genexpresion (siTIP60 vs siCTL)') +
theme_xf +
theme(plot.title = element_text(hjust = 0.5))
ggsave(filename = 'figures/Gene_expression_exon.jpg', width = 10, height = 8, dpi = 150, units = 'in')
p + geom_point() + geom_errorbar(aes(ymin = Mean-se, ymax = Mean + se),width = .2) +
geom_text(aes(label = N, y = Mean+se+0.1),vjust = -3,size = 3) +
labs(y = 'Mean log2FC change', x = 'Exon number', title = 'Genexpresion (siTIP60 vs siCTL)') +
theme_xf +
theme(plot.title = element_text(hjust = 0.5))
p + geom_point() + geom_errorbar(aes(ymin = Mean-se, ymax = Mean + se),width = .2) +
geom_text(aes(label = N, y = Mean+se+0.01),vjust = -3,size = 3) +
labs(y = 'Mean log2FC change', x = 'Exon number', title = 'Genexpresion (siTIP60 vs siCTL)') +
theme_xf +
theme(plot.title = element_text(hjust = 0.5))
p + geom_point() + geom_errorbar(aes(ymin = Mean-se, ymax = Mean + se),width = .2) +
geom_text(aes(label = N, y = Mean+se),vjust = -3,size = 3) +
labs(y = 'Mean log2FC change', x = 'Exon number', title = 'Genexpresion (siTIP60 vs siCTL)') +
theme_xf +
theme(plot.title = element_text(hjust = 0.5))
p + geom_point() + geom_errorbar(aes(ymin = Mean-se, ymax = Mean + se),width = .2) +
geom_text(aes(label = N, y = Mean+se-0.05),vjust = -3,size = 3) +
labs(y = 'Mean log2FC change', x = 'Exon number', title = 'Genexpresion (siTIP60 vs siCTL)') +
theme_xf +
theme(plot.title = element_text(hjust = 0.5))
p + geom_point() + geom_errorbar(aes(ymin = Mean-se, ymax = Mean + se),width = .2) +
geom_text(aes(label = N, y = Mean+se-0.01),vjust = -3,size = 3) +
labs(y = 'Mean log2FC change', x = 'Exon number', title = 'Genexpresion (siTIP60 vs siCTL)') +
theme_xf +
theme(plot.title = element_text(hjust = 0.5))
p + geom_point() + geom_errorbar(aes(ymin = Mean-se, ymax = Mean + se),width = .2) +
geom_text(aes(label = N, y = Mean+se-0.01),vjust = -3,size = 3) +
geom_hline(yintercept = 0)+
labs(y = 'Mean log2FC change', x = 'Exon number', title = 'Genexpresion (siTIP60 vs siCTL)') +
theme_xf +
theme(plot.title = element_text(hjust = 0.5))
ggsave(filename = 'figures/Gene_expression_exon.jpg', width = 10, height = 8, dpi = 150, units = 'in')
head(plot.table)
str(plot.table)
p + geom_point() + geom_errorbar(aes(ymin = Mean-se, ymax = Mean + se),width = .2) +
geom_text(aes(label = N, y = Mean+se-0.01),vjust = -3,size = 3) +
geom_hline(yintercept = 0)+
labs(y = 'Mean log2FC change (Mean ± SE)', x = 'Exon number', title = 'Genexpresion (siTIP60 vs siCTL)') +
theme_xf +
theme(plot.title = element_text(hjust = 0.5))
p + geom_point() + geom_errorbar(aes(ymin = Mean-se, ymax = Mean + se),width = .2) +
geom_text(aes(label = N, y = Mean+se-0.01),vjust = -3,size = 3) +
geom_hline(yintercept = 0)+
labs(y = 'log2 Fold change (Mean ± SE)', x = 'Exon number', title = 'Genexpresion (siTIP60 vs siCTL)') +
theme_xf +
theme(plot.title = element_text(hjust = 0.5))
ggsave(filename = 'figures/Gene_expression_exon.jpg', width = 10, height = 8, dpi = 150, units = 'in')
p <- ggplot(plot.table, aes(x = width, y = log2FoldChange))
p + geom_point()
p + geom_point() + scale_x_continuous(trans = 'log10')
#length
plot.table <- res.deseq2[gene_type == 'protein_coding' & seqnames != 'chrM' & regulation != 'NC',]
p <- ggplot(plot.table, aes(x = width, y = log2FoldChange))
p + geom_point() + scale_x_continuous(trans = 'log10')
p + geom_point() + scale_x_continuous(trans = 'log10')+
geom_smooth(method = 'lm')
p <- ggplot(plot.table, aes(x = width, y = log2FoldChange))
p + geom_point() + scale_x_continuous(trans = 'log10')+
geom_smooth(method = 'lm')
p <- ggplot(plot.table, aes(x = width, y = log2FoldChange))
p + geom_point(alpha = 0.02) + scale_x_continuous(trans = 'log10')+
geom_smooth(method = 'lm')
#length
plot.table <- res.deseq2[gene_type == 'protein_coding' & seqnames != 'chrM',]
p <- ggplot(plot.table, aes(x = width, y = log2FoldChange))
p + geom_point(alpha = 0.02) + scale_x_continuous(trans = 'log10')+
geom_smooth(method = 'lm')
p <- ggplot(plot.table, aes(x = width, y = log2FoldChange))
p + geom_point(alpha = 0.1) + scale_x_continuous(trans = 'log10')+
geom_smooth(method = 'lm')
？geom_smooth()
？geom_smooth
?geom_smooth
p + geom_point(alpha = 0.1) + scale_x_continuous(trans = 'log10')+
geom_smooth(method = 'glm')
p + geom_point(alpha = 0.1) + scale_x_continuous(trans = 'log10')+
geom_smooth(method = 'loess')
p + geom_point(alpha = 0.1) + scale_x_continuous(trans = 'log10')+
geom_smooth()
p + geom_point(alpha = 0.1) + scale_x_continuous(trans = 'log10')+
geom_smooth() +
geom_smooth(method = 'lm')
p + geom_point(alpha = 0.1) + scale_x_continuous(trans = 'log10')+
geom_smooth(method = 'lm') +
theme_xf
p + geom_point(alpha = 0.1) + scale_x_continuous(trans = 'log10', breaks = c(500,1000,10000,100000))+
geom_smooth(method = 'lm') +
theme_xf
p + geom_point(alpha = 0.1) +
scale_x_continuous(trans = 'log10', breaks = c(500,1000,10000,100000), labels = c('100','1k','10k','100k','1M'))+
geom_smooth(method = 'lm') +
labs(x = 'Gene length (bp)',title = 'Gene expression (siTIP60 vs siCTL)')+
theme_xf
p + geom_point(alpha = 0.1) +
scale_x_continuous(trans = 'log10', breaks = c(500,1000,10000,100000,1000000), labels = c('100','1k','10k','100k','1M'))+
geom_smooth(method = 'lm') +
labs(x = 'Gene length (bp)',title = 'Gene expression (siTIP60 vs siCTL)')+
theme_xf
?cut
cut(c(1,3,4,5,1,2,4,6,7,8,10),breaks = 2)
range(plot.table$width)
head(res.deseq2)
plot.table <- res.deseq2[gene_type == 'protein_coding' & seqnames != 'chrM',]
temp <- AnnotationDbi::select(org.Hs.eg.db,plot.table$gene_name,'ENTREZID',keytype = 'SYMBOL')
plot.table <- merge(plot.table, temp,by.x = 'gene_name',by.y ='SYMBOL',all.x = F,all.y =F)
plot.table <- merge(plot.table,exon.count,by = 'ENTREZID',all.x = T, all.y = F)
plot.table[exon.n > 30, exon.n := 30]
plot.table <- plot.table[!is.na(exon.n),]
plot.table[,exon.n := as.character(exon.n)][exon.n == '30', exon.n := '30+']
plot.table[,exon.n := factor(exon.n,levels = c(as.character(1:29),'30+'))]
head(plot.table)
#length
p <- ggplot(plot.table, aes(x = width, y = log2FoldChange))
p + geom_point(alpha = 0.1) +
scale_x_continuous(trans = 'log10', breaks = c(500,1000,10000,100000,1000000), labels = c('100','1k','10k','100k','1M'))+
geom_smooth(method = 'lm') +
labs(x = 'Gene length (bp)',title = 'Gene expression (siTIP60 vs siCTL)')+
theme_xf
plot.table[width < 100,]
range(plot.table$width)
#length
p <- ggplot(plot.table, aes(x = width, y = log2FoldChange))
p + geom_point(alpha = 0.1) +
scale_x_continuous(trans = 'log10', breaks = c(500,1000,10000,100000,1000000), labels = c('100','1k','10k','100k','1M'))+
geom_smooth(method = 'lm') +
labs(x = 'Gene length (bp)',title = 'Gene expression (siTIP60 vs siCTL)')+
theme_xf
min(plot.table$width)
p + geom_point(alpha = 0.1) +
scale_x_continuous(trans = 'log10', breaks = c(500,1000,10000,100000,1000000), labels = c('500','1k','10k','100k','1M'))+
geom_smooth(method = 'lm') +
labs(x = 'Gene length (bp)',title = 'Gene expression (siTIP60 vs siCTL)')+
theme_xf
p + geom_point(alpha = 0.1) +
scale_x_continuous(trans = 'log10', breaks = c(500,1000,10000,100000,1000000), labels = c('500','1k','10k','100k','1M'))+
geom_smooth(method = 'lm') +
labs(x = 'Gene length (bp)',title = 'Gene expression (siTIP60 vs siCTL)')+
theme_xf +
theme(plot.title = element_text(hjust = 0.5))
ggsave(filename = 'figures/Gene_expression_length.jpg', width = 10, height = 8, dpi = 150, units = 'in')
?rm
rm(list = ls(pattern = 'mx'))
