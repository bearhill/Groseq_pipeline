test <- GTF2GR('coordinates/Hela.transcripts.all.gtf')
GTF2GR <- function(file){
require(data.table)
require(GenomicRanges)
coordinate <- fread(file) %>% `colnames<-`(c('seqname','source','feature','start','end','score','strand','frame','attribute'))
attribute.type <- strsplit(coordinate$attribute[1],';') %>% unlist() %>% str_replace_all( '\\".*\\"','')
attribute <- list(NULL)
for (i in seq(length(attribute.type))) {
name <- attribute.type[i]
temp <- str_extract(coordinate$attribute, paste0(name, '\\".*?;')) %>%
str_replace_all(name, '') %>%
str_replace_all('\"', '') %>%
str_replace_all(';', '') %>%
str_replace_all(' ', '')
attribute[[i]] <- temp
}
attribute <- as.data.table(attribute) %>% `colnames<-`(str_replace_all(attribute.type,' ',''))
coordinate$attribute <- NULL
coordinate <- cbind(coordinate, attribute)
coordinate <- makeGRangesFromDataFrame(coordinate,keep.extra.columns = T) %>% sort()
coordinate
}
save(GTF2GR, file = 'r.func/GTF2GR.rdata')
# Change coordinate to GR -------------------------------------------------
test <- GTF2GR('coordinates/Hela.transcripts.all.gtf')
head(test)
table(test$gene_type)
dif.exp <- fread('P400.raw.counttable.txt')
coordinate <- test
Info <- colnames(dif.exp)[1]
dif.exp <- makeGRangesFromDataFrame(dif.exp[,-1],keep.extra.columns = T) %>% sort()
dif.tb <- cbind(mcols(coordinate),as.data.table(dif.exp)) %>% as.data.table()
total.reads <- tail(colnames(dif.tb),groupn) %>% str_extract('\\d+\\.0') %>% as.numeric() %>% sum()/1000000
head(dif.tb)
dif.tb <- cbind(mcols(coordinate),as.data.table(dif.exp)) %>% as.data.table()
head(dif.tb)
ncol(dif.tb)
nrow(dif.tb)
reads <- tail(colnames(dif.tb),groupn) %>% str_extract('\\d+\\.0') %>% as.numeric() %>% rowSums()
reads <- dif.tb[,tail(seq(ncol(dif.tb)),groupn),with =F]
head
head(reads)
reads <- dif.tb[,.(tail(colnames(dif.tb),groupn),gene_type)]
head(reads)
reads <- dif.tb[,.(as.name(tail(colnames(dif.tb),groupn)),gene_type)]
reads <- dif.tb[,c(tail(colnames(dif.tb),groupn),gene_type),withh = F]
reads <- dif.tb[,c(tail(colnames(dif.tb),groupn),gene_type),with = F]
reads <- dif.tb[,c(tail(colnames(dif.tb),groupn),'gene_type'),with = F]
head(reads)
reads <- dif[,c(tail(colnames(dif.tb),groupn)),with = F] %>% rowSums()
reads <- dif.tb[,c(tail(colnames(dif.tb),groupn)),with = F] %>% rowSums()
reads <- dif.tb[,c(tail(colnames(dif.tb),groupn)),with = F] %>% rowSums() %>% cbind(dif.tb$gene_type)
head(reads)
reads <- data.table(count=reads,gene_type = dif.tb$gene_type)
reads <- reads[,.(countsum= sum(count)),by = gene_type]
head(reads)
reads <- dif.tb[,c(tail(colnames(dif.tb),groupn)),with = F] %>% rowSums()
reads <- data.table(count=reads,gene_type = dif.tb$gene_type)
head(reads)
reads <- reads[,.(countsum= sum(count)),by = gene_type]
reads
total.reads
sum(reads$countsum)/1000000
noreads_type <- reads[countsum < 100,]$gene_type
?pie
#Plot Pie Chart:
plot.table <- reads[!gene_type %in% noreads_type,]
#Plot Pie Chart:
genecount <- table(dif.tb$gene_type)
nrow(dif.tb)
#Plot Pie Chart:
genecount <- table(dif.tb$gene_type)
genecount
plot.table <- genecount[!names(genecount) %in% noreads_type]
pie(plot.table)
?pie
plot.table <- data.table(count = plot.table, name = names(plot.table))
plot.table
reads <- dif.tb[,c(tail(colnames(dif.tb),groupn)),with = F] %>% rowSums()
genetype.info <- data.table(reads=reads,gene_type = dif.tb$gene_type)
genetype.info <- genetype.info[,.(countsum= sum(count)),by = gene_type]
genetype.info <- genetype.info[,.(countsum= sum(reads)),by = gene_type]
genetype.info
gentype.info <- merge(gentype.info,temp)
temp <- table(dif.tb$gene_type)
temp <- data.table(count = temp, gene_type = names(plot.table))
gentype.info <- merge(gentype.info,temp)
reads <- dif.tb[,c(tail(colnames(dif.tb),groupn)),with = F] %>% rowSums()
genetype.info <- data.table(reads=reads,gene_type = dif.tb$gene_type)
genetype.info <- genetype.info[,.(countsum= sum(reads)),by = gene_type]
temp <- table(dif.tb$gene_type)
temp <- data.table(count = temp, gene_type = names(plot.table))
gentype.info <- merge(gentype.info,temp)
genetype.info
test <- merge(gentype.info,temp)
?merge
class(genetype.info)
class(temp)
test <- merge(gentype.info,temp)
test <- merge(genetype.info,temp)
temp
temp <- table(dif.tb$gene_type)
temp <- data.table(count = temp, gene_type = names(plot.table))
View(temp)
temp <- table(dif.tb$gene_type)
temp <- data.table(count = temp, gene_type = names(temp))
temp
temp <- data.table(count = as.numeric(temp), gene_type = names(temp))
temp <- table(dif.tb$gene_type)
temp <- data.table(count = as.numeric(temp), gene_type = names(temp))
temp
test <- merge(genetype.info,temp)
test
genetype.info <- merge(genetype.info,temp)
genetype.info <- data.table(reads=reads,gene_type = dif.tb$gene_type)
genetype.info <- genetype.info[,.(sumreads= sum(reads)*100/total.reads),by = gene_type]
temp <- table(dif.tb$gene_type)
temp <- data.table(count = as.numeric(temp), gene_type = names(temp))
genetype.info <- merge(genetype.info,temp)
genetype.info
#Summary genetype.info
total.reads <- tail(colnames(dif.tb),groupn) %>% str_extract('\\d+\\.0') %>% as.numeric() %>% sum()
reads <- dif.tb[,c(tail(colnames(dif.tb),groupn)),with = F] %>% rowSums()
genetype.info <- data.table(reads=reads,gene_type = dif.tb$gene_type)
genetype.info <- genetype.info[,.(sumreads= sum(reads)*100/total.reads),by = gene_type]
temp <- table(dif.tb$gene_type)
temp <- data.table(count = as.numeric(temp), gene_type = names(temp))
genetype.info <- merge(genetype.info,temp)
genetype.info
rpkm <- dif.tb[,tail(seq(ncol(dif.tb)),groupn),with=F] %>% rowSums()*1000/(dif.tb$width*total.reads)
dif.tb <- dif.tb[,rpkm:=rpkm]
head(dif.tb)
dif.tb[,`:=`(rpkm=rpkm,express = 'expressed')]
dif.tb[rpkm < 0.1, express := 'non-expressed']
head(dif.tb)
dif.tb <- cbind(mcols(coordinate),as.data.table(dif.exp)) %>% as.data.table()
dif.tb <- DefExp('temp.csv',groups = c('siCTL','siCTL','siP400','siP400'),ref = 'siCTL')
nrow(dif.tb)
dif.exp <- fread('P400.raw.counttable.txt')
Info <- colnames(dif.exp)[1]
dif.exp <- makeGRangesFromDataFrame(dif.exp[,-1],keep.extra.columns = T) %>% sort()
dif.tb <- cbind(mcols(coordinate),as.data.table(dif.exp)) %>% as.data.table()
nrow(dif.tb)
#Differential expressed
rpkm <- dif.tb[,tail(seq(ncol(dif.tb)),groupn),with=F] %>% rowSums()*1000/(dif.tb$width*total.reads)
plot.table <- dif.tb
write.csv(dif.tb[rpkm >= 0.1,],file = 'expressed.csv')
dif.tb[rpkm >= 0.1,] %>% nrow
dif.tb[rpkm >= 0.1,] %>% nrow()
#Differential expressed
rpkm <- dif.tb[,tail(seq(ncol(dif.tb)),groupn),with=F] %>% rowSums()*1000/(dif.tb$width*total.reads)
dif.tb[rpkm >= 0.1,] %>% nrow()
rpkm > 0.1 %>% sum
rpkm > 0.1 %>% sum()
(rpkm > 0.1) %>% sum()
dif.exp <- fread('P400.raw.counttable.txt')
Info <- colnames(dif.exp)[1]
dif.exp <- makeGRangesFromDataFrame(dif.exp[,-1],keep.extra.columns = T) %>% sort()
dif.tb <- cbind(mcols(coordinate),as.data.table(dif.exp)) %>% as.data.table()
#Differential expressed
rpkm <- dif.tb[,tail(seq(ncol(dif.tb)),groupn),with=F] %>% rowSums()*1000/(dif.tb$width*total.reads)
write.csv(dif.tb[rpkm >= 0.1,],file = 'expressed.csv')
dif.tb[rpkm >= 0.1,]
colnames(dif.tb)
head(rpkm)
#Differential expressed
rpkm <- dif.tb[,tail(seq(ncol(dif.tb)),groupn),with=F] %>% rowSums()*1000*1000000/(dif.tb$width*total.reads)
write.csv(dif.tb[rpkm >= 0.1,],file = 'expressed.csv')
plot.table <- dif.tb
plot.table[,`:=`(rpkm=rpkm,express = 'expressed')]
plot.table[rpkm < 0.1, express := 'non-expressed']
plot + geom_bar()
plot <- ggplot(plot.table,aes(x =gene_type, fill = express))
plot + geom_bar()
library(ggplot)
library(ggplot2)
plot <- ggplot(plot.table,aes(x =gene_type, fill = express))
plot + geom_bar()
genetype.info
genetype.major <- genetype.info[count > 40,]$gene_type
dif.tb <- dif.tb[gene_type %in% genetype.major,]
#Differential expressed
rpkm <- dif.tb[,tail(seq(ncol(dif.tb)),groupn),with=F] %>% rowSums()*1000*1000000/(dif.tb$width*total.reads)
genetype.major
genetype.major <- genetype.info[count > 200,]$gene_type
dif.tb <- dif.tb[gene_type %in% genetype.major,]
#Differential expressed
rpkm <- dif.tb[,tail(seq(ncol(dif.tb)),groupn),with=F] %>% rowSums()*1000*1000000/(dif.tb$width*total.reads)
colnames(dif.tb)
dif.exp <- fread('P400.raw.counttable.txt')
Info <- colnames(dif.exp)[1]
dif.exp <- makeGRangesFromDataFrame(dif.exp[,-1],keep.extra.columns = T) %>% sort()
dif.tb <- cbind(mcols(coordinate),as.data.table(dif.exp)) %>% as.data.table()
#Summary genetype.info
total.reads <- tail(colnames(dif.tb),groupn) %>% str_extract('\\d+\\.0') %>% as.numeric() %>% sum()
reads <- dif.tb[,c(tail(colnames(dif.tb),groupn)),with = F] %>% rowSums()
genetype.info <- data.table(reads=reads,gene_type = dif.tb$gene_type)
genetype.info <- genetype.info[,.(sumreads= sum(reads)*100/total.reads),by = gene_type]
temp <- table(dif.tb$gene_type)
temp <- data.table(count = as.numeric(temp), gene_type = names(temp))
genetype.info <- merge(genetype.info,temp)
genetype.major <- genetype.info[count > 200,]$gene_type
dif.tb <- dif.tb[gene_type %in% genetype.major,]
#Differential expressed
rpkm <- dif.tb[,tail(seq(ncol(dif.tb)),groupn),with=F] %>% rowSums()*1000*1000000/(dif.tb$width*total.reads)
write.csv(dif.tb[rpkm >= 0.1,],file = 'expressed.csv',row.names = F)
plot.table <- dif.tb
plot.table[,`:=`(rpkm=rpkm,express = 'expressed')]
plot.table[rpkm < 0.1, express := 'non-expressed']
plot <- ggplot(plot.table,aes(x =gene_type, fill = express))
plot + geom_bar()
load('r.func/theme_xf.rdata')
plot + geom_bar() + theme_xf
plot + geom_bar() + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggsave('expressed_transcripts_P400.jpg', width = 6, height = 6, dpi =150, units = 'in')
dif.deseq2 <- DefExp('expressed.csv',groups = c('siCTL','siCTL','siP400','siP400'),ref = 'siCTL')
temp <- dif.deseq2
temp$regulation <- 'NC'
temp[padj < 0.05 & log2FoldChange > 0,]$regulation <- 'Increase'
temp[padj < 0.05 & log2FoldChange < 0,]$regulation <- 'Decrease'
test <- ggplot(temp,aes(x = gene_type, fill = regulation))
test + geom_bar(width = 0.9)
temp$regulation <- 'NC'
temp[padj < 0.1 & log2FoldChange > 0,]$regulation <- 'Increase'
temp[padj < 0.1 & log2FoldChange < 0,]$regulation <- 'Decrease'
test <- ggplot(temp,aes(x = gene_type, fill = regulation))
test + geom_bar(width = 0.9)
temp$regulation <- 'NC'
temp[padj < 0.5 & log2FoldChange > 0,]$regulation <- 'Increase'
temp[padj < 0.5 & log2FoldChange < 0,]$regulation <- 'Decrease'
test + geom_bar(width = 0.9) + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))
temp <- dif.deseq2
temp$regulation <- 'NC'
temp[padj < 0.05 & log2FoldChange > 0,]$regulation <- 'Increase'
temp[padj < 0.05 & log2FoldChange < 0,]$regulation <- 'Decrease'
test <- ggplot(temp,aes(x = gene_type, fill = regulation))
test + geom_bar(width = 0.9) + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggsave('dif_expressed_transcripts_P400.jpg', width = 6, height = 6, dpi =150, units = 'in')
ggsave('dif_expressed_transcripts_P400.jpg', width = 6, height = 6, dpi =150, units = 'in')
groups <- c('siCTL','siCTL','siTIP60','siTIP60')
groupn <- length(groups)
min.exp <- 0.1
dif.exp <- fread('TIP60.raw.counttable.txt')
Info <- colnames(dif.exp)[1]
groups <- c('siCTL','siCTL','siTIP60','siTIP60')
groupn <- length(groups)
min.exp <- 0.1
dif.exp <- fread('TIP60.raw.counttable.txt')
Info <- colnames(dif.exp)[1]
dif.exp <- makeGRangesFromDataFrame(dif.exp[,-1],keep.extra.columns = T) %>% sort()
dif.tb <- cbind(mcols(coordinate),as.data.table(dif.exp)) %>% as.data.table()
#Summary genetype.info
total.reads <- tail(colnames(dif.tb),groupn) %>% str_extract('\\d+\\.0') %>% as.numeric() %>% sum()
reads <- dif.tb[,c(tail(colnames(dif.tb),groupn)),with = F] %>% rowSums()
genetype.info <- data.table(reads=reads,gene_type = dif.tb$gene_type)
genetype.info <- genetype.info[,.(sumreads= sum(reads)*100/total.reads),by = gene_type]
temp <- table(dif.tb$gene_type)
temp <- data.table(count = as.numeric(temp), gene_type = names(temp))
genetype.info <- merge(genetype.info,temp)
genetype.major <- genetype.info[count > 200,]$gene_type
dif.tb <- dif.tb[gene_type %in% genetype.major,]
#Differential expressed
rpkm <- dif.tb[,tail(seq(ncol(dif.tb)),groupn),with=F] %>% rowSums()*1000*1000000/(dif.tb$width*total.reads)
write.csv(dif.tb[rpkm >= 0.1,],file = 'expressed.csv',row.names = F)
plot.table <- dif.tb
plot.table[,`:=`(rpkm=rpkm,express = 'expressed')]
plot.table[rpkm < 0.1, express := 'non-expressed']
plot <- ggplot(plot.table,aes(x =gene_type, fill = express))
plot + geom_bar() + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggsave('expressed_transcripts_TIP60.jpg', width = 6, height = 6, dpi =150, units = 'in')
dif.deseq2 <- DefExp('expressed.csv',groups = c('siCTL','siCTL','siTIP60','siTIP60'),ref = 'siCTL')
temp <- dif.deseq2
temp$regulation <- 'NC'
temp[padj < 0.05 & log2FoldChange > 0,]$regulation <- 'Increase'
temp[padj < 0.05 & log2FoldChange < 0,]$regulation <- 'Decrease'
test <- ggplot(temp,aes(x = gene_type, fill = regulation))
test + geom_bar(width = 0.9) + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggsave('dif_expressed_transcripts_TIP60.jpg', width = 6, height = 6, dpi =150, units = 'in')
temp[padj < 0.1 & log2FoldChange > 0,]$regulation <- 'Increase'
temp[padj < 0.1 & log2FoldChange < 0,]$regulation <- 'Decrease'
test <- ggplot(temp,aes(x = gene_type, fill = regulation))
test + geom_bar(width = 0.9) + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))
temp[padj < 0.5 & log2FoldChange > 0,]$regulation <- 'Increase'
temp[padj < 0.5 & log2FoldChange < 0,]$regulation <- 'Decrease'
test <- ggplot(temp,aes(x = gene_type, fill = regulation))
test + geom_bar(width = 0.9) + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggsave('dif_expressed_transcripts_TIP60_loss.jpg', width = 6, height = 6, dpi =150, units = 'in')
rm(list = ls())
counttable.raw.file <-  'TIP60.raw.counttable.txt'
coordinate.file <-  'coordinates/Hela.transcripts.all.gtf'
groups <- c('siCTL','siCTL','siTIP60','siTIP60')
groupn <- length(groups)
min.rpkm <- 0.1
# Load packages and functions needed ---------------------------------------------------
library(GenomicRanges)
library(magrittr)
library(ggplot2)
library(data.table)
library(RColorBrewer)
library(stringr)
for(i in list.files('r.func/')){
load(paste0('r.func/',i))
}
# Change coordinate to GR -------------------------------------------------
coordinate <- GTF2GR('coordinates/Hela.transcripts.all.gtf')
counttable <- fread(counttable.raw.file)
length(coordinate)
length(counttable)
head(counttable)
head(coordinate)
# combine coordinate info
counttable <- makeGRangesFromDataFrame(counttable[,-1]) %>% sort()
head(counttable)
# combine coordinate info
counttable <- makeGRangesFromDataFrame(counttable[,-1],keep.extra.columns = T) %>% sort()
counttable <- fread(counttable.raw.file)
# combine coordinate info
counttable <- makeGRangesFromDataFrame(counttable[,-1],keep.extra.columns = T) %>% sort()
head(counttable)
head(coordinate)
# combine coordinate info
counttable <- makeGRangesFromDataFrame(counttable[,-1],keep.extra.columns = T) %>% sort()
counttable <- cbind(as.data.table(coordinate),mcols(counttable)[,tail(ncol(counttable),groupn)])
head(counttable)
# combine coordinate info
counttable <- makeGRangesFromDataFrame(counttable[,-1],keep.extra.columns = T) %>% sort()
counttable <- fread(counttable.raw.file)
# combine coordinate info
counttable <- makeGRangesFromDataFrame(counttable[,-1],keep.extra.columns = T) %>% sort()
counttable <- cbind(as.data.table(coordinate),mcols(counttable)[,tail(ncol(counttable),groupn)])
head(counttable)
counttable <- fread(counttable.raw.file)
Info <- colnames(counttable)[1]
# combine coordinate info
counttable <- makeGRangesFromDataFrame(counttable[,-1],keep.extra.columns = T) %>% sort()
counttable <- cbind(as.data.table(coordinate),mcols(counttable)[,tail(seq(ncol(mcols(counttable))),groupn)])
head(counttable)
sum(counttable$Homer.tags.Hela.siTIP60.rpt2.GRO...7408166.0.total.)
# select major gene_type.
total.reads <- tail(colnames(counttable),groupn) %>% str_extract('\\d+\\.0') %>% as.numeric() %>% sum()
genetype.info <- dif.tb[,c(tail(colnames(dif.tb),groupn)),with = F] %>% rowSums()
genetype.info <- dif.tb[,c(tail(colnames(counttable),groupn)),with = F] %>% rowSums()
temp <- counttable[,c(tail(colnames(counttable),groupn)),with = F] %>% rowSums()
head(counttable)
class(counttable)
counttable <- fread(counttable.raw.file)
Info <- colnames(counttable)[1]
# combine coordinate info
counttable <- makeGRangesFromDataFrame(counttable[,-1],keep.extra.columns = T) %>% sort()
counttable <- cbind(as.data.table(transcripts.gr),mcols(counttable)[,tail(seq(ncol(mcols(counttable))),groupn)]) %>% as.data.table()
# Change transcripts to GR -------------------------------------------------
transcripts.gr <- GTF2GR('coordinates/Hela.transcripts.all.gtf')
counttable <- cbind(as.data.table(transcripts.gr),mcols(counttable)[,tail(seq(ncol(mcols(counttable))),groupn)]) %>% as.data.table()
temp <- counttable[,c(tail(colnames(counttable),groupn)),with = F] %>% rowSums()
genetype.info <- data.table(reads=temp,gene_type = counttable$gene_type)
genetype.info <- genetype.info[,.(readsperc= sum(reads)*100/total.reads,
count=.N),by = gene_type]
genetype.info
genetype.info <- genetype.info[order(-readsperc)]
genetype.info
genetype.major <- genetype.info[readsperc > 0.001,]$gene_type
genetype.major
# draw pie plot of gene_type.
genetype.major <- genetype.info[readsperc > 0.001,]$gene_type
genetype.info <- genetype.info[gene_type %in% genetype.major,]
genetype.info
genetype.info <- rbind(genetype.info,list('other',1-sum(genetype.info$readsperc),0))
genetype.info
genetype.info <- rbind(genetype.info,list('other',100-sum(genetype.info$readsperc),0))
genetype.info
genetype.info <- data.table(reads=temp,gene_type = counttable$gene_type)
genetype.info <- genetype.info[,.(readsperc= sum(reads)*100/total.reads,
count=.N),by = gene_type]
genetype.info <- genetype.info[order(-readsperc)]
# draw pie plot of gene_type.
genetype.major <- genetype.info[readsperc > 0.001,]$gene_type
genetype.info <- genetype.info[gene_type %in% genetype.major,]
genetype.info <- rbind(genetype.info,list('other',100-sum(genetype.info$readsperc),0))
genetype.info
?pie
pie(genetype.info$readsperc, genetype.info$gene_type,clockwise = T, init.angle = 0)
pie(genetype.info$readsperc, genetype.info$gene_type,clockwise = T, init.angle = -90)
pie(genetype.info$readsperc, genetype.info$gene_type,clockwise = T, init.angle = 90)
p <- ggplot(genetype.info,aes(x='',y=readsperc, fill = gene_type))
p + geom_bar(stat = 'identity')
genetype.info$gene_type <- factor(genetype.info$gene_type,levels = genetype.info$gene_type)
p <- ggplot(genetype.info,aes(x='',y=readsperc, fill = gene_type))
p + geom_bar(stat = 'identity')
p + geom_bar(stat = 'identity') + coord_polar()
p + geom_bar(stat = 'identity') + coord_polar(theta = 'y')
library(GenomicRanges)
library(magrittr)
library(ggplot2)
library(data.table)
library(RColorBrewer)
library(stringr)
p <- ggplot(genetype.info,aes(x='',y=readsperc, fill = gene_type))
p + geom_bar(stat = 'identity') + coord_polar(theta = 'y')
p + geom_bar(stat = 'identity') + coord_polar(theta = 'y') + theme_xf
genetype.info <- genetype.info[order(readsperc)]
genetype.major <- genetype.info[readsperc > 0.001,]$gene_type
genetype.info <- genetype.info[gene_type %in% genetype.major,]
genetype.info <- rbind(genetype.info,list('other',100-sum(genetype.info$readsperc),0))
temp <- counttable[,c(tail(colnames(counttable),groupn)),with = F] %>% rowSums()
genetype.info <- data.table(reads=temp,gene_type = counttable$gene_type)
genetype.info <- genetype.info[,.(readsperc= sum(reads)*100/total.reads,
count=.N),by = gene_type]
genetype.info <- genetype.info[order(readsperc)]
# draw pie plot of gene_type.
genetype.major <- genetype.info[readsperc > 0.001,]$gene_type
genetype.info <- genetype.info[gene_type %in% genetype.major,]
genetype.info <- rbind(genetype.info,list('other',100-sum(genetype.info$readsperc),0))
genetype.info$gene_type <- factor(genetype.info$gene_type,levels = genetype.info$gene_type)
pie(genetype.info$readsperc, genetype.info$gene_type,clockwise = T, init.angle = 90)
p <- ggplot(genetype.info,aes(x='',y=readsperc, fill = gene_type))
p + geom_bar(stat = 'identity') +
coord_polar(theta = 'y') +
theme_xf
genetype.info
genetype.info <- data.table(reads=temp,gene_type = counttable$gene_type)
genetype.info <- genetype.info[,.(readsperc= sum(reads)*100/total.reads,
count=.N),by = gene_type]
genetype.info <- genetype.info[order(readsperc)]
# draw pie plot of gene_type.
genetype.major <- genetype.info[readsperc > 0.001,]$gene_type
genetype.info <- genetype.info[gene_type %in% genetype.major,]
genetype.info <- rbind(list('other',100-sum(genetype.info$readsperc),0),genetype.info)
genetype.info$gene_type <- factor(genetype.info$gene_type,levels = genetype.info$gene_type)
p <- ggplot(genetype.info,aes(x='',y=readsperc, fill = gene_type))
p + geom_bar(stat = 'identity') +
coord_polar(theta = 'y') +
theme_xf
library(RColorBrewer)
nrow(genetype.info)
brewer.pal(9,'set1')
brewer.pal(9,'Set1')
colorRampPalette(brewer.pal(11, "Spectral"))(20)
?scale_fill_discrete
?scale_fill_manual
p <- ggplot(genetype.info,aes(x='',y=readsperc, fill = gene_type))
p + geom_bar(stat = 'identity') +
coord_polar(theta = 'y') +
scale_fill_manual(values = colorRampPalette(brewer.pal(11,'Spectral'))(18))+
theme_xf
p <- ggplot(genetype.info,aes(x='',y=readsperc, fill = gene_type))
p + geom_bar(stat = 'identity') +
coord_polar(theta = 'y') +
scale_fill_manual(values = colorRampPalette(brewer.pal(11,'paired'))(18))+
theme_xf
p <- ggplot(genetype.info,aes(x='',y=readsperc, fill = gene_type))
p + geom_bar(stat = 'identity') +
coord_polar(theta = 'y') +
scale_fill_manual(values = colorRampPalette(brewer.pal(11,'Paired'))(18))+
theme_xf
p + geom_bar(stat = 'identity') +
coord_polar(theta = 'y') +
scale_fill_manual(values = colorRampPalette(brewer.pal(9,'Set1'))(18))+
theme_xf
p + geom_bar(stat = 'identity') +
coord_polar(theta = 'y') +
scale_fill_manual(values = c(brewer.pal(9,'Set1'),brewer.pal(8,'Set3'),'grey50'))+
theme_xf
p + geom_bar(stat = 'identity') +
coord_polar(theta = 'y') +
scale_fill_manual(values = rev(c(brewer.pal(9,'Set1'),brewer.pal(8,'Set3'),'grey50')))+
theme_xf
p + geom_bar(stat = 'identity') +
coord_polar(theta = 'y', start = 0) +
scale_fill_manual(values = rev(c(brewer.pal(9,'Set1'),brewer.pal(8,'Set3'),'grey50')))+
theme_xf
p + geom_bar(stat = 'identity',width = 1) +
coord_polar(theta = 'y', start = 0) +
scale_fill_manual(values = rev(c(brewer.pal(9,'Set1'),brewer.pal(8,'Set3'),'grey50')))+
theme_xf
p + geom_bar(stat = 'identity',width = 1) +
coord_polar(theta = 'y', start = 0) +
scale_fill_manual(values = rev(c(brewer.pal(9,'Set1'),brewer.pal(nrow(genetype.info)-10,'Set3'),'grey50')))+
theme_xf +
###################################################################stoped here
#Differential expressed
rpkm <- dif.tb[,tail(seq(ncol(dif.tb)),groupn),with=F] %>% rowSums()*1000*1000000/(dif.tb$width*total.reads)
p + geom_bar(stat = 'identity',width = 1) +
coord_polar(theta = 'y', start = 0) +
scale_fill_manual(values = rev(c(brewer.pal(9,'Set1'),brewer.pal(nrow(genetype.info)-10,'Set3'),'grey50')))+
theme_xf +
###################################################################stoped here
#Differential expressed
rpkm <- dif.tb[,tail(seq(ncol(dif.tb)),groupn),with=F] %>% rowSums()*1000*1000000/(dif.tb$width*total.reads)
p + geom_bar(stat = 'identity',width = 1) +
coord_polar(theta = 'y', start = 0) +
scale_fill_manual(values = rev(c(brewer.pal(9,'Set1'),brewer.pal(nrow(genetype.info)-10,'Set3'),'grey50')))+
theme_xf +
theme(axis.line = element_blank())
p + geom_bar(stat = 'identity',width = 1) +
coord_polar(theta = 'y', start = 0) +
scale_fill_manual(values = rev(c(brewer.pal(9,'Set1'),brewer.pal(nrow(genetype.info)-10,'Set3'),'grey50')))+
theme_xf +
theme(axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text = element_blank())
p + geom_bar(stat = 'identity',width = 1) +
coord_polar(theta = 'y', start = 0) +
scale_fill_manual(values = rev(c(brewer.pal(9,'Set1'),brewer.pal(nrow(genetype.info)-10,'Set3'),'grey50')))+
theme_xf +
theme(axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.line = element_blank())
theme_xf
install.packages('plotly')
library(plotly)
p <- plotly(genetype.info,labels = ~ gene_type, values = ~readsperc, type = 'pie', textposition = 'outside')
