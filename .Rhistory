plot.table[rpkm < 0.1, express := 'non-expressed']
plot <- ggplot(plot.table,aes(x =gene_type, fill = express))
plot + geom_bar() + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggsave('expressed_transcripts_TIP60.jpg', width = 6, height = 6, dpi =150, units = 'in')
dif.deseq2 <- DefExp('expressed.csv',groups = c('siCTL','siCTL','siTIP60','siTIP60'),ref = 'siCTL')
temp <- dif.deseq2
temp$regulation <- 'NC'
temp[padj < 0.05 & log2FoldChange > 0,]$regulation <- 'Increase'
temp[padj < 0.05 & log2FoldChange < 0,]$regulation <- 'Decrease'
test <- ggplot(temp,aes(x = gene_type, fill = regulation))
test + geom_bar(width = 0.9) + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggsave('dif_expressed_transcripts_TIP60.jpg', width = 6, height = 6, dpi =150, units = 'in')
temp[padj < 0.1 & log2FoldChange > 0,]$regulation <- 'Increase'
temp[padj < 0.1 & log2FoldChange < 0,]$regulation <- 'Decrease'
test <- ggplot(temp,aes(x = gene_type, fill = regulation))
test + geom_bar(width = 0.9) + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))
temp[padj < 0.5 & log2FoldChange > 0,]$regulation <- 'Increase'
temp[padj < 0.5 & log2FoldChange < 0,]$regulation <- 'Decrease'
test <- ggplot(temp,aes(x = gene_type, fill = regulation))
test + geom_bar(width = 0.9) + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggsave('dif_expressed_transcripts_TIP60_loss.jpg', width = 6, height = 6, dpi =150, units = 'in')
rm(list = ls())
counttable.raw.file <-  'TIP60.raw.counttable.txt'
coordinate.file <-  'coordinates/Hela.transcripts.all.gtf'
groups <- c('siCTL','siCTL','siTIP60','siTIP60')
groupn <- length(groups)
min.rpkm <- 0.1
# Load packages and functions needed ---------------------------------------------------
library(GenomicRanges)
library(magrittr)
library(ggplot2)
library(data.table)
library(RColorBrewer)
library(stringr)
for(i in list.files('r.func/')){
load(paste0('r.func/',i))
}
# Change coordinate to GR -------------------------------------------------
coordinate <- GTF2GR('coordinates/Hela.transcripts.all.gtf')
counttable <- fread(counttable.raw.file)
length(coordinate)
length(counttable)
head(counttable)
head(coordinate)
# combine coordinate info
counttable <- makeGRangesFromDataFrame(counttable[,-1]) %>% sort()
head(counttable)
# combine coordinate info
counttable <- makeGRangesFromDataFrame(counttable[,-1],keep.extra.columns = T) %>% sort()
counttable <- fread(counttable.raw.file)
# combine coordinate info
counttable <- makeGRangesFromDataFrame(counttable[,-1],keep.extra.columns = T) %>% sort()
head(counttable)
head(coordinate)
# combine coordinate info
counttable <- makeGRangesFromDataFrame(counttable[,-1],keep.extra.columns = T) %>% sort()
counttable <- cbind(as.data.table(coordinate),mcols(counttable)[,tail(ncol(counttable),groupn)])
head(counttable)
# combine coordinate info
counttable <- makeGRangesFromDataFrame(counttable[,-1],keep.extra.columns = T) %>% sort()
counttable <- fread(counttable.raw.file)
# combine coordinate info
counttable <- makeGRangesFromDataFrame(counttable[,-1],keep.extra.columns = T) %>% sort()
counttable <- cbind(as.data.table(coordinate),mcols(counttable)[,tail(ncol(counttable),groupn)])
head(counttable)
counttable <- fread(counttable.raw.file)
Info <- colnames(counttable)[1]
# combine coordinate info
counttable <- makeGRangesFromDataFrame(counttable[,-1],keep.extra.columns = T) %>% sort()
counttable <- cbind(as.data.table(coordinate),mcols(counttable)[,tail(seq(ncol(mcols(counttable))),groupn)])
head(counttable)
sum(counttable$Homer.tags.Hela.siTIP60.rpt2.GRO...7408166.0.total.)
# select major gene_type.
total.reads <- tail(colnames(counttable),groupn) %>% str_extract('\\d+\\.0') %>% as.numeric() %>% sum()
genetype.info <- dif.tb[,c(tail(colnames(dif.tb),groupn)),with = F] %>% rowSums()
genetype.info <- dif.tb[,c(tail(colnames(counttable),groupn)),with = F] %>% rowSums()
temp <- counttable[,c(tail(colnames(counttable),groupn)),with = F] %>% rowSums()
head(counttable)
class(counttable)
counttable <- fread(counttable.raw.file)
Info <- colnames(counttable)[1]
# combine coordinate info
counttable <- makeGRangesFromDataFrame(counttable[,-1],keep.extra.columns = T) %>% sort()
counttable <- cbind(as.data.table(transcripts.gr),mcols(counttable)[,tail(seq(ncol(mcols(counttable))),groupn)]) %>% as.data.table()
# Change transcripts to GR -------------------------------------------------
transcripts.gr <- GTF2GR('coordinates/Hela.transcripts.all.gtf')
counttable <- cbind(as.data.table(transcripts.gr),mcols(counttable)[,tail(seq(ncol(mcols(counttable))),groupn)]) %>% as.data.table()
temp <- counttable[,c(tail(colnames(counttable),groupn)),with = F] %>% rowSums()
genetype.info <- data.table(reads=temp,gene_type = counttable$gene_type)
genetype.info <- genetype.info[,.(readsperc= sum(reads)*100/total.reads,
count=.N),by = gene_type]
genetype.info
genetype.info <- genetype.info[order(-readsperc)]
genetype.info
genetype.major <- genetype.info[readsperc > 0.001,]$gene_type
genetype.major
# draw pie plot of gene_type.
genetype.major <- genetype.info[readsperc > 0.001,]$gene_type
genetype.info <- genetype.info[gene_type %in% genetype.major,]
genetype.info
genetype.info <- rbind(genetype.info,list('other',1-sum(genetype.info$readsperc),0))
genetype.info
genetype.info <- rbind(genetype.info,list('other',100-sum(genetype.info$readsperc),0))
genetype.info
genetype.info <- data.table(reads=temp,gene_type = counttable$gene_type)
genetype.info <- genetype.info[,.(readsperc= sum(reads)*100/total.reads,
count=.N),by = gene_type]
genetype.info <- genetype.info[order(-readsperc)]
# draw pie plot of gene_type.
genetype.major <- genetype.info[readsperc > 0.001,]$gene_type
genetype.info <- genetype.info[gene_type %in% genetype.major,]
genetype.info <- rbind(genetype.info,list('other',100-sum(genetype.info$readsperc),0))
genetype.info
?pie
pie(genetype.info$readsperc, genetype.info$gene_type,clockwise = T, init.angle = 0)
pie(genetype.info$readsperc, genetype.info$gene_type,clockwise = T, init.angle = -90)
pie(genetype.info$readsperc, genetype.info$gene_type,clockwise = T, init.angle = 90)
p <- ggplot(genetype.info,aes(x='',y=readsperc, fill = gene_type))
p + geom_bar(stat = 'identity')
genetype.info$gene_type <- factor(genetype.info$gene_type,levels = genetype.info$gene_type)
p <- ggplot(genetype.info,aes(x='',y=readsperc, fill = gene_type))
p + geom_bar(stat = 'identity')
p + geom_bar(stat = 'identity') + coord_polar()
p + geom_bar(stat = 'identity') + coord_polar(theta = 'y')
library(GenomicRanges)
library(magrittr)
library(ggplot2)
library(data.table)
library(RColorBrewer)
library(stringr)
p <- ggplot(genetype.info,aes(x='',y=readsperc, fill = gene_type))
p + geom_bar(stat = 'identity') + coord_polar(theta = 'y')
p + geom_bar(stat = 'identity') + coord_polar(theta = 'y') + theme_xf
genetype.info <- genetype.info[order(readsperc)]
genetype.major <- genetype.info[readsperc > 0.001,]$gene_type
genetype.info <- genetype.info[gene_type %in% genetype.major,]
genetype.info <- rbind(genetype.info,list('other',100-sum(genetype.info$readsperc),0))
temp <- counttable[,c(tail(colnames(counttable),groupn)),with = F] %>% rowSums()
genetype.info <- data.table(reads=temp,gene_type = counttable$gene_type)
genetype.info <- genetype.info[,.(readsperc= sum(reads)*100/total.reads,
count=.N),by = gene_type]
genetype.info <- genetype.info[order(readsperc)]
# draw pie plot of gene_type.
genetype.major <- genetype.info[readsperc > 0.001,]$gene_type
genetype.info <- genetype.info[gene_type %in% genetype.major,]
genetype.info <- rbind(genetype.info,list('other',100-sum(genetype.info$readsperc),0))
genetype.info$gene_type <- factor(genetype.info$gene_type,levels = genetype.info$gene_type)
pie(genetype.info$readsperc, genetype.info$gene_type,clockwise = T, init.angle = 90)
p <- ggplot(genetype.info,aes(x='',y=readsperc, fill = gene_type))
p + geom_bar(stat = 'identity') +
coord_polar(theta = 'y') +
theme_xf
genetype.info
genetype.info <- data.table(reads=temp,gene_type = counttable$gene_type)
genetype.info <- genetype.info[,.(readsperc= sum(reads)*100/total.reads,
count=.N),by = gene_type]
genetype.info <- genetype.info[order(readsperc)]
# draw pie plot of gene_type.
genetype.major <- genetype.info[readsperc > 0.001,]$gene_type
genetype.info <- genetype.info[gene_type %in% genetype.major,]
genetype.info <- rbind(list('other',100-sum(genetype.info$readsperc),0),genetype.info)
genetype.info$gene_type <- factor(genetype.info$gene_type,levels = genetype.info$gene_type)
p <- ggplot(genetype.info,aes(x='',y=readsperc, fill = gene_type))
p + geom_bar(stat = 'identity') +
coord_polar(theta = 'y') +
theme_xf
library(RColorBrewer)
nrow(genetype.info)
brewer.pal(9,'set1')
brewer.pal(9,'Set1')
colorRampPalette(brewer.pal(11, "Spectral"))(20)
?scale_fill_discrete
?scale_fill_manual
p <- ggplot(genetype.info,aes(x='',y=readsperc, fill = gene_type))
p + geom_bar(stat = 'identity') +
coord_polar(theta = 'y') +
scale_fill_manual(values = colorRampPalette(brewer.pal(11,'Spectral'))(18))+
theme_xf
p <- ggplot(genetype.info,aes(x='',y=readsperc, fill = gene_type))
p + geom_bar(stat = 'identity') +
coord_polar(theta = 'y') +
scale_fill_manual(values = colorRampPalette(brewer.pal(11,'paired'))(18))+
theme_xf
p <- ggplot(genetype.info,aes(x='',y=readsperc, fill = gene_type))
p + geom_bar(stat = 'identity') +
coord_polar(theta = 'y') +
scale_fill_manual(values = colorRampPalette(brewer.pal(11,'Paired'))(18))+
theme_xf
p + geom_bar(stat = 'identity') +
coord_polar(theta = 'y') +
scale_fill_manual(values = colorRampPalette(brewer.pal(9,'Set1'))(18))+
theme_xf
p + geom_bar(stat = 'identity') +
coord_polar(theta = 'y') +
scale_fill_manual(values = c(brewer.pal(9,'Set1'),brewer.pal(8,'Set3'),'grey50'))+
theme_xf
p + geom_bar(stat = 'identity') +
coord_polar(theta = 'y') +
scale_fill_manual(values = rev(c(brewer.pal(9,'Set1'),brewer.pal(8,'Set3'),'grey50')))+
theme_xf
p + geom_bar(stat = 'identity') +
coord_polar(theta = 'y', start = 0) +
scale_fill_manual(values = rev(c(brewer.pal(9,'Set1'),brewer.pal(8,'Set3'),'grey50')))+
theme_xf
p + geom_bar(stat = 'identity',width = 1) +
coord_polar(theta = 'y', start = 0) +
scale_fill_manual(values = rev(c(brewer.pal(9,'Set1'),brewer.pal(8,'Set3'),'grey50')))+
theme_xf
p + geom_bar(stat = 'identity',width = 1) +
coord_polar(theta = 'y', start = 0) +
scale_fill_manual(values = rev(c(brewer.pal(9,'Set1'),brewer.pal(nrow(genetype.info)-10,'Set3'),'grey50')))+
theme_xf +
###################################################################stoped here
#Differential expressed
rpkm <- dif.tb[,tail(seq(ncol(dif.tb)),groupn),with=F] %>% rowSums()*1000*1000000/(dif.tb$width*total.reads)
p + geom_bar(stat = 'identity',width = 1) +
coord_polar(theta = 'y', start = 0) +
scale_fill_manual(values = rev(c(brewer.pal(9,'Set1'),brewer.pal(nrow(genetype.info)-10,'Set3'),'grey50')))+
theme_xf +
###################################################################stoped here
#Differential expressed
rpkm <- dif.tb[,tail(seq(ncol(dif.tb)),groupn),with=F] %>% rowSums()*1000*1000000/(dif.tb$width*total.reads)
p + geom_bar(stat = 'identity',width = 1) +
coord_polar(theta = 'y', start = 0) +
scale_fill_manual(values = rev(c(brewer.pal(9,'Set1'),brewer.pal(nrow(genetype.info)-10,'Set3'),'grey50')))+
theme_xf +
theme(axis.line = element_blank())
p + geom_bar(stat = 'identity',width = 1) +
coord_polar(theta = 'y', start = 0) +
scale_fill_manual(values = rev(c(brewer.pal(9,'Set1'),brewer.pal(nrow(genetype.info)-10,'Set3'),'grey50')))+
theme_xf +
theme(axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text = element_blank())
p + geom_bar(stat = 'identity',width = 1) +
coord_polar(theta = 'y', start = 0) +
scale_fill_manual(values = rev(c(brewer.pal(9,'Set1'),brewer.pal(nrow(genetype.info)-10,'Set3'),'grey50')))+
theme_xf +
theme(axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.line = element_blank())
theme_xf
install.packages('plotly')
library(plotly)
p <- plotly(genetype.info,labels = ~ gene_type, values = ~readsperc, type = 'pie', textposition = 'outside')
install.packages('plotly')
library(plotly)
?plotly
p <- plotly(genetype.info,labels = ~gene_type, values = ~readsperc, type = 'pie', textposition = 'outside')
class(genetype.info)
colnames(genetype.info)
p <- plot_ly(genetype.info,labels = ~gene_type, values = ~readsperc, type = 'pie', textposition = 'outside')
layout(p)
genetype.info
?plot_ly
layout(p)
p <- plot_ly(genetype.info,labels = ~gene_type, values = ~readsperc, type = 'pie',
textposition = 'outside',
textinfo = 'gene_type + percent'
)
layout(p)
p <- plot_ly(genetype.info,labels = ~gene_type, values = ~readsperc, type = 'pie',
textposition = 'outside',
textinfo = 'label + percent'
)
layout(p)
p <- plot_ly(genetype.info,labels = ~gene_type, values = ~readsperc, type = 'pie',
textposition = 'outside',
textinfo = 'text + percent'
)
layout(p)
p <- plot_ly(genetype.info,labels = ~gene_type, values = ~readsperc, type = 'pie',
textposition = 'outside',
textinfo = 'text+percent'
)
layout(p)
p <- plot_ly(genetype.info,labels = ~gene_type, values = ~readsperc, type = 'pie',
textposition = 'outside',
textinfo = 'text+percent'
)
layout(p)
p <- plot_ly(genetype.info,labels = ~gene_type, values = ~readsperc, type = 'pie',
textposition = 'outside',
textinfo = 'text'
)
layout(p)
p <- plot_ly(genetype.info,labels = ~gene_type, values = ~readsperc, type = 'pie',
textposition = 'outside',
textinfo = 'label'
)
layout(p)
p <- plot_ly(genetype.info,labels = ~gene_type, values = ~readsperc, type = 'pie',
textposition = 'outside',
textinfo = 'label+percent'
)
p <- plot_ly(genetype.info,labels = ~gene_type, values = ~readsperc, type = 'pie',
textposition = 'outside',
textinfo = 'label+value'
)
layout(p)
layout(p,margin = 100)
layout(p,margin = 200)
p <- plot_ly(genetype.info,labels = ~gene_type, values = ~readsperc, type = 'pie',
textposition = 'outside',
textinfo = 'label+percent'
)
layout(p,margin = 200)
layout(p,margin = list(l=400))
layout(p,margin = list(l=200,t=200))
p <- plot_ly(genetype.info,labels = ~gene_type, values = ~readsperc, type = 'pie',
textposition = 'outside',
textinfo = 'label+percent',
showlegend = T
)
layout(p,margin = list(l=200,t=200))
layout(p,margin = list(l=200,t=200), showlegend = T)
p <- plot_ly(genetype.info,labels = ~gene_type, values = ~readsperc, type = 'pie',
textposition = 'outside',
textinfo = 'label+percent'
)
p <- plot_ly(genetype.info,labels = ~gene_type, values = ~readsperc, type = 'pie',
textposition = 'outside',
textinfo = 'percent'
)
layout(p,margin = list(l=200,t=200), showlegend = T)
p <- plot_ly(genetype.info,labels = ~gene_type, values = ~readsperc, type = 'pie',
textposition = 'inside',
textinfo = 'percent'
)
layout(p,
margin = list(l=200,t=200),
showlegend = T,
legend = list())
p <- plot_ly(genetype.info,labels = ~gene_type, values = ~readsperc, type = 'pie',
textposition = 'outside',
textinfo = 'percent'
)
plot.table <- genetype.info
plot.table[,gene_type:= paste0(gene_type,'(',count,')')]
p <- plot_ly(plot.table,labels = ~gene_type, values = ~readsperc, type = 'pie',
textposition = 'outside',
textinfo = 'percent'
)
layout(p,
margin = list(l=200,t=200),
showlegend = T)
plot.table[gene_type == 'other',count:=NA]
plot.table <- genetype.info
plot.table[gene_type == 'other',count:=NA]
plot.table[,gene_type:= paste0(gene_type,'(',count,')')]
p <- plot_ly(plot.table,labels = ~gene_type, values = ~readsperc, type = 'pie',
textposition = 'outside',
textinfo = 'percent'
)
layout(p,
margin = list(l=200,t=200),
showlegend = T)
genetype.info <- data.table(reads=temp,gene_type = counttable$gene_type)
genetype.info <- genetype.info[,.(readsperc= sum(reads)*100/total.reads,
count=.N),by = gene_type]
genetype.info <- genetype.info[order(readsperc)]
# draw pie plot of gene_type.
genetype.major <- genetype.info[readsperc > 0.001,]$gene_type
genetype.info <- genetype.info[gene_type %in% genetype.major,]
genetype.info <- rbind(list('other',100-sum(genetype.info$readsperc),0),genetype.info)
counttable <- fread(counttable.raw.file)
Info <- colnames(counttable)[1]
# combine coordinate info
counttable <- makeGRangesFromDataFrame(counttable[,-1],keep.extra.columns = T) %>% sort()
counttable <- cbind(as.data.table(transcripts.gr),mcols(counttable)[,tail(seq(ncol(mcols(counttable))),groupn)]) %>% as.data.table()
# select major gene_type.
total.reads <- tail(colnames(counttable),groupn) %>% str_extract('\\d+\\.0') %>% as.numeric() %>% sum()
temp <- counttable[,c(tail(colnames(counttable),groupn)),with = F] %>% rowSums()
genetype.info <- data.table(reads=temp,gene_type = counttable$gene_type)
genetype.info <- genetype.info[,.(readsperc= sum(reads)*100/total.reads,
count=.N),by = gene_type]
genetype.info <- genetype.info[order(readsperc)]
# draw pie plot of gene_type.
genetype.major <- genetype.info[readsperc > 0.001,]$gene_type
genetype.info <- genetype.info[gene_type %in% genetype.major,]
genetype.info <- rbind(list('other',100-sum(genetype.info$readsperc),0),genetype.info)
genetype.info$gene_type <- factor(genetype.info$gene_type,levels = genetype.info$gene_type)
library(GenomicRanges)
library(magrittr)
library(ggplot2)
library(data.table)
library(RColorBrewer)
library(stringr)
counttable <- fread(counttable.raw.file)
Info <- colnames(counttable)[1]
# combine coordinate info
counttable <- makeGRangesFromDataFrame(counttable[,-1],keep.extra.columns = T) %>% sort()
counttable <- cbind(as.data.table(transcripts.gr),mcols(counttable)[,tail(seq(ncol(mcols(counttable))),groupn)]) %>% as.data.table()
# select major gene_type.
total.reads <- tail(colnames(counttable),groupn) %>% str_extract('\\d+\\.0') %>% as.numeric() %>% sum()
temp <- counttable[,c(tail(colnames(counttable),groupn)),with = F] %>% rowSums()
genetype.info <- data.table(reads=temp,gene_type = counttable$gene_type)
genetype.info <- genetype.info[,.(readsperc= sum(reads)*100/total.reads,
count=.N),by = gene_type]
genetype.info <- genetype.info[order(readsperc)]
# draw pie plot of gene_type.
genetype.major <- genetype.info[readsperc > 0.001,]$gene_type
genetype.info <- genetype.info[gene_type %in% genetype.major,]
genetype.info <- rbind(list('other',100-sum(genetype.info$readsperc),0),genetype.info)
genetype.info$gene_type <- factor(genetype.info$gene_type,levels = genetype.info$gene_type)
plot.table[gene_type == 'other',count:=NA]
library(plotly)
plot.table <- genetype.info
plot.table$gene_type <- paste0(plot.table$gene_type,'(',plot.table$count,')')
p <- plot_ly(plot.table,labels = ~gene_type, values = ~readsperc, type = 'pie',
textposition = 'outside',
textinfo = 'percent'
)
layout(p,
margin = list(l=200,t=200),
showlegend = T)
plot.table
genetype.info
plot.table <- genetype.info
plot.table$gene_type <- paste0(plot.table$gene_type,'(',plot.table$count,')')
p <- plot_ly(plot.table,labels = ~gene_type, values = ~readsperc, type = 'pie',
textposition = 'outside',
textinfo = 'percent'
)
layout(p,
margin = list(l=200,t=200),
showlegend = T)
plot.table
plot.table <- genetype.info
plot.table
plot.table$gene_type <- paste0(plot.table$gene_type,'(',plot.table$count,')')
plot.table
genetype.info[gene_type == 'other',count:=NA]
genetype.info <- rbind(list('other',100-sum(genetype.info$readsperc),0),genetype.info)
genetype.info$gene_type <- factor(genetype.info$gene_type,levels = genetype.info$gene_type)
counttable <- fread(counttable.raw.file)
Info <- colnames(counttable)[1]
# combine coordinate info
counttable <- makeGRangesFromDataFrame(counttable[,-1],keep.extra.columns = T) %>% sort()
counttable <- cbind(as.data.table(transcripts.gr),mcols(counttable)[,tail(seq(ncol(mcols(counttable))),groupn)]) %>% as.data.table()
# select major gene_type.
total.reads <- tail(colnames(counttable),groupn) %>% str_extract('\\d+\\.0') %>% as.numeric() %>% sum()
temp <- counttable[,c(tail(colnames(counttable),groupn)),with = F] %>% rowSums()
genetype.info <- data.table(reads=temp,gene_type = counttable$gene_type)
genetype.info <- genetype.info[,.(readsperc= sum(reads)*100/total.reads,
count=.N),by = gene_type]
genetype.info <- genetype.info[order(readsperc)]
# draw pie plot of gene_type.
genetype.major <- genetype.info[readsperc > 0.001,]$gene_type
genetype.info <- genetype.info[gene_type %in% genetype.major,]
genetype.info <- rbind(list('other',100-sum(genetype.info$readsperc),0),genetype.info)
genetype.info$gene_type <- factor(genetype.info$gene_type,levels = genetype.info$gene_type)
genetype.info[gene_type == 'other',count:=NA]
genetype.info
plot.table <- genetype.info
plot.table$gene_type <- paste0(plot.table$gene_type,'(',plot.table$count,')')
p <- plot_ly(plot.table,labels = ~gene_type, values = ~readsperc, type = 'pie',
textposition = 'outside',
textinfo = 'percent'
)
layout(p,
margin = list(l=200,t=200),
showlegend = T)
p <- plot_ly(plot.table,labels = ~gene_type, values = ~readsperc, type = 'pie',
textposition = 'outside',
textinfo = 'percent',
marker = list(colors = colors,
line = list(color = '#FFFFFF',
width = 1))
)
layout(p,
margin = list(l=200,t=200),
showlegend = T)
layout(p,
margin = list(l=100,t=100),
showlegend = T)
layout(p,
title = 'Distribution of GRO-seq reads on genomic elements',
margin = list(l=100,t=80,b=50),
showlegend = T)
jpeg('figures/test.jpg',width=700,height = 700)
layout(p,
title = 'Distribution of GRO-seq reads on genomic elements',
margin = list(l=100,t=80,b=50),
showlegend = T)
dev.off()
install.packages('webshot')
library(webshot)
export(file = 'figures/test.jpg')
export(file = 'figures/test.JPG')
export(file = 'figures/test.png')
?plotly_IMAGE
test <- layout(p,
title = 'Distribution of GRO-seq reads on genomic elements',
margin = list(l=100,t=80,b=50),
showlegend = T)
plotly_IMAGE(test)
help(signup, package = 'plotly')
h
signup('Feng_Xiong','xiong.feng.90@gmail.com')
plotly_IMAGE(test,out_file = 'test.png')
Sys.setenv("plotly_username"="Feng_Xiong")
Sys.setenv("plotly_api_key"="cKUazDNFFbwzc7m8EGdj")
plotly_IMAGE(test,out_file = 'test.png')
?
plotly_IMAGE
p <- layout(p,
title = 'Distribution of GRO-seq reads on genomic elements',
margin = list(l=100,t=80,b=50),
showlegend = T)
plotly_IMAGE(p, width = 700, height = 700, out_file = 'figures/GRO-seq_reads_distribution.png')
