export(file = 'figures/test.jpg')
export(file = 'figures/test.JPG')
export(file = 'figures/test.png')
?plotly_IMAGE
test <- layout(p,
title = 'Distribution of GRO-seq reads on genomic elements',
margin = list(l=100,t=80,b=50),
showlegend = T)
plotly_IMAGE(test)
help(signup, package = 'plotly')
h
signup('Feng_Xiong','xiong.feng.90@gmail.com')
plotly_IMAGE(test,out_file = 'test.png')
Sys.setenv("plotly_username"="Feng_Xiong")
Sys.setenv("plotly_api_key"="cKUazDNFFbwzc7m8EGdj")
plotly_IMAGE(test,out_file = 'test.png')
?
plotly_IMAGE
p <- layout(p,
title = 'Distribution of GRO-seq reads on genomic elements',
margin = list(l=100,t=80,b=50),
showlegend = T)
plotly_IMAGE(p, width = 700, height = 700, out_file = 'figures/GRO-seq_reads_distribution.png')
library(GenomicRanges)
library(magrittr)
library(ggplot2)
library(data.table)
library(RColorBrewer)
library(stringr)
counttable
min.rpkm <- 0.1
class(counttable)
E9
10E9
rpkm <- counttable[,tail(colnames(counttable),groupn),with=F] %>% rowSums()*10E9/(counttable$width*total.reads)
head(rpkm)
summary(rpkm)
plot.table$rpkm <- rpkm
nrow(counttable)
plot.table <- counttable
plot.table$rpkm <- rpkm
colnames(counttable)
plot.table[,`:=`(express = 'expressed')]
plot.table[rpkm < 0.1, express := 'non-expressed']
colnames(counttable)
plot <- ggplot(plot.table,aes(x =gene_type, fill = express))
plot + geom_bar() + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))
genetype.major
genetype.info
genetype.info[order(count)]
genetype.info[order(-count)]
genetype.info[order(-count)][count > 200,]
genetype.info[order(-count)][count > 200,]$gene_type
plot.table <- plot.table[gene_type %in% genetype.info[count > 200,]$gene_type,]
plot <- ggplot(plot.table,aes(x =gene_type, fill = express))
plot + geom_bar() + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot.table[,gene_type := factor(gene_type, levels = genetype.info[order(-gene_type)][count > 200,]$gene_type)]
plot <- ggplot(plot.table,aes(x =gene_type, fill = express))
plot + geom_bar() + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))
genetype.major
genetype.major <- genetype.info[readsperc > 0.001,][order(-count)]$gene_type
genetype.major <- genetype.info[readsperc > 0.001,][order(-count)]$gene_type %>% as.character()
genetype.info[count > 200,]$gene_type,]
genetype.info[count > 200,]$gene_type
genetype.major
temp <- genetype.info[order(-gene_type)][count > 200,]$gene_type %>% as.character()
plot.table <- plot.table[gene_type %in% genetype.info[count > 200,]$gene_type,]
plot.table[,gene_type := factor(gene_type,
levels = genetype.info[order(-count)][count > 200,]$gene_type)]
plot <- ggplot(plot.table,aes(x =gene_type, fill = express))
plot + geom_bar() + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot + geom_bar() + theme_xf +
labs(title = 'test') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot + geom_bar() + theme_xf +
labs(title = 'test',x=NULL) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
temp <- plot.table[,`:=`(count = .N),by=c(gene_type,express)]
colnames(plot.table)
temp <- plot.table[,`:=`(count = .N),by=.(gene_type,express)]
temp
View(temp)
temp <- plot.table[express == 'expressed',`:=`(count = .N),by=gene_type]
temp <- plot.table[express == 'expressed',count := .N,by=gene_type]
View(temp)
temp$gene_type
temp <- plot.table[express == 'expressed',.N,by=gene_type]
View(temp)
temp <- plot.table[express == 'expressed',.N,by=gene_type] %>% merge(genetype.info)
temp
colnames()
colnames(temp)
temp <- paste0(temp$N/temp$count*100,'%')
temp
temp <- paste0(round(temp$N/temp$count*100,2),'%')
temp <- plot.table[express == 'expressed',.N,by=gene_type] %>% merge(genetype.info)
temp <- paste0(round(temp$N/temp$count*100,2),'%')
temp
?geom_text
plot + geom_bar() + theme_xf +
labs(title = 'test',x=NULL) +
scale_fill_manual(values = c('firebrick4','grey50'))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot + geom_bar() + theme_xf +
labs(title = 'test',x=NULL) +
scale_fill_manual(values = c('red4','grey50'))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot + geom_bar() + theme_xf +
labs(title = 'test',x=NULL) +
scale_fill_manual(values = c('firebrick2','grey50'))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot + geom_bar() + theme_xf +
labs(title = 'test',x=NULL) +
scale_fill_manual(values = c('firebrick3','grey50'))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
temp <- plot.table[express == 'expressed',.N,by=gene_type] %>% merge(genetype.info)
temp$experc <- paste0(round(temp$N/temp$count*100,2),'%')
plot <- ggplot(plot.table,aes(x =gene_type, fill = express))
plot + geom_bar() + theme_xf +
labs(title = 'test',x=NULL) +
geom_text(data = temp, mapping = aes(y=experc))+
scale_fill_manual(values = c('firebrick3','grey50'))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot + geom_bar() + theme_xf +
labs(title = 'test',x=NULL) +
# geom_text(data = temp, mapping = aes(y=experc))+
scale_fill_manual(values = c('firebrick3','grey50'))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
temp
plot + geom_bar() + theme_xf +
labs(title = 'test',x=NULL) +
geom_text(vjust = -1)+
scale_fill_manual(values = c('firebrick3','grey50'))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot <- ggplot(plot.table,aes(x =gene_type, fill = express, label = temp$experc))
plot + geom_bar() + theme_xf +
labs(title = 'test',x=NULL) +
geom_text(aes(y = temp$count),vjust = -1)+
scale_fill_manual(values = c('firebrick3','grey50'))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot.table <- counttable
plot.table$rpkm <- rpkm
plot.table[,`:=`(express = 'expressed')]
plot.table[rpkm < 0.1, express := 'non-expressed']
plot.table <- plot.table[,.N,by=.(gene_type,express)]
View(plot.table)
plot.table <- plot.table %>% merge(genetype.info)
plot.table
plot.table[,experc := paste0(round(N/count*100,'%'))]
plot.table[,experc := paste0(round(N/count*100),'%')]
plot.table
plot.table[,experc := paste0(round(N/count*100),'%')][order(-count)]
plot.table
plot.table <- plot.table[order(-count)]
plot.table
str(plot.table)
plot.table <- counttable
plot.table$rpkm <- rpkm
plot.table[,`:=`(express = 'expressed')]
plot.table[rpkm < 0.1, express := 'non-expressed']
plot.table <- plot.table[,.N,by=.(gene_type,express)] %>% merge(genetype.info)
plot.table <- plot.table[order(-count)][,`:=`(experc=paste0(round(N/count*100),'%'),
gene_type:= factor(gene_type,
levels = unique(as.character(gene_type))))]
plot.table <- plot.table[order(-count)][,`:=`(experc=paste0(round(N/count*100),'%'),
gene_type= factor(gene_type,
levels = unique(as.character(gene_type))))]
plot.table
plot.ta
plot.table
plot.table <- counttable
plot.table$rpkm <- rpkm
plot.table[,`:=`(express = 'expressed')]
plot.table[rpkm < 0.1, express := 'non-expressed']
plot.table <- plot.table[,.N,by=.(gene_type,express)] %>% merge(genetype.info)
plot.table <- plot.table[order(-count)][,`:=`(experc=paste0(round(N/count*100),'%'),
gene_type= factor(gene_type,
levels = unique(gene_type)))]
plot.table
plot <- ggplot(plot.table,aes(x =gene_type, fill = express, label = experc))
plot + geom_bar() + theme_xf +
labs(title = 'test',x=NULL) +
geom_text(vjust = -1)+
scale_fill_manual(values = c('firebrick3','grey50'))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
?geom_bar
plot <- ggplot(plot.table,aes(x =gene_type, y = N, fill = express, label = experc))
plot + geom_bar() + theme_xf +
labs(title = 'test',x=NULL) +
geom_text(vjust = -1)+
scale_fill_manual(values = c('firebrick3','grey50'))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot <- ggplot(plot.table,aes(x =gene_type, y= N, fill = express, label = experc))
plot + geom_bar() + theme_xf +
labs(title = 'test',x=NULL) +
geom_text(vjust = -1)+
scale_fill_manual(values = c('firebrick3','grey50'))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot <- ggplot(plot.table,aes(x =gene_type, y= N, fill = express, label = experc))
plot + geom_bar() + theme_xf
plot + geom_bar(stat = 'identity') + theme_xf +
labs(title = 'test',x=NULL) +
geom_text(vjust = -1)+
scale_fill_manual(values = c('firebrick3','grey50'))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot + geom_bar(stat = 'identity') + theme_xf +
labs(title = 'test',x=NULL) +
geom_text(aes(y = count),vjust = -1)+
scale_fill_manual(values = c('firebrick3','grey50'))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggsave('expressed_transcripts_TIP60.jpg', width = 6, height = 6, dpi =150, units = 'in')
plot.table[express == 'non-expressed', experc := NA]
plot <- ggplot(plot.table,aes(x =gene_type, y= N, fill = express, label = experc))
plot + geom_bar(stat = 'identity') + theme_xf +
labs(title = 'test',x=NULL) +
geom_text(aes(y = count),vjust = -1)+
scale_fill_manual(values = c('firebrick3','grey50'))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot + geom_bar(stat = 'identity') + theme_xf +
labs(title = 'test',x=NULL) +
geom_text(aes(y = count),vjust = -0.5)+
scale_fill_manual(values = c('firebrick3','grey50'))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot + geom_bar(stat = 'identity') + theme_xf +
labs(title = 'test',x=NULL) +
geom_text(aes(y = count),vjust = -0.5, size =1)+
scale_fill_manual(values = c('firebrick3','grey50'))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot + geom_bar(stat = 'identity') + theme_xf +
labs(title = 'test',x=NULL) +
geom_text(aes(y = count),vjust = -0.5, size =3)+
scale_fill_manual(values = c('firebrick3','grey50'))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot + geom_bar(stat = 'identity') + theme_xf +
labs(title = 'test',x=NULL) +
geom_text(aes(y = count),vjust = -0.5, size =3)+
scale_fill_manual(values = c('firebrick3','grey50'))+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(hjust = 0.5))
plot <- ggplot(plot.table[count > 200,],aes(x =gene_type, y= N, fill = express, label = experc))
plot + geom_bar(stat = 'identity') + theme_xf +
labs(title = 'test',x=NULL) +
geom_text(aes(y = count),vjust = -0.5, size =3)+
scale_fill_manual(values = c('firebrick3','grey50'))+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(hjust = 0.5))
plot + geom_bar(stat = 'identity') + theme_xf +
labs(title = 'test',x=NULL) +
geom_text(aes(y = count),vjust = -0.5, size =3.5)+
scale_fill_manual(values = c('firebrick3','grey50'))+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(hjust = 0.5))
plot + geom_bar(stat = 'identity') + theme_xf +
labs(title = 'test',x=NULL) +
geom_text(aes(y = count),vjust = -0.5, size =3.5)+
scale_fill_manual(values = c('firebrick3','grey50'))+
ylim(0,max(plot.table$count *1.2))+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(hjust = 0.5))
plot + geom_bar(stat = 'identity') + theme_xf +
labs(title = 'test',x=NULL) +
geom_text(aes(y = count),vjust = -0.5, size =3.5)+
scale_fill_manual(values = c('firebrick3','grey50'))+
ylim(0,max(plot.table$count *1.1))+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(hjust = 0.5))
plot + geom_bar(stat = 'identity') + theme_xf +
labs(title = 'expression of genomic elements (rpkm > 0.1)',x=NULL, y = 'Count') +
geom_text(aes(y = count),vjust = -0.5, size =3.5)+
scale_fill_manual(values = c('firebrick3','grey50'))+
ylim(0,max(plot.table$count *1.1))+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(hjust = 0.5))
plot + geom_bar(stat = 'identity') + theme_xf +
labs(title = 'expression of genomic elements (rpkm > 0.1)',x=NULL, y = 'Count') +
geom_text(aes(y = count),vjust = -0.5, size =3.5)+
scale_fill_manual(values = c('firebrick3','grey50'))+
ylim(0,max(plot.table$count *1.1))+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(hjust = 0.5),
legend.position = c(.9,.75))
plot + geom_bar(stat = 'identity') + theme_xf +
labs(title = 'expression of genomic elements (rpkm > 0.1)',x=NULL, y = 'Count') +
geom_text(aes(y = count),vjust = -0.5, size =3.5)+
scale_fill_manual(values = c('firebrick3','grey50'))+
ylim(0,max(plot.table$count *1.1))+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(hjust = 0.5),
legend.position = c(.8,.75))
plot + geom_bar(stat = 'identity') + theme_xf +
labs(title = 'expression of genomic elements (rpkm > 0.1)',x=NULL, y = 'Count') +
geom_text(aes(y = count),vjust = -0.5, size =3.5)+
scale_fill_manual(values = c('firebrick3','grey50'))+
ylim(0,max(plot.table$count *1.1))+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(hjust = 0.5),
legend.position = c(.85,.75))
ggsave('figure/expressed_transcripts_TIP60.jpg', width = 6, height = 6, dpi =150, units = 'in')
dev.off()
plot <- ggplot(plot.table[count > 200,],aes(x =gene_type, y= N, fill = express, label = experc))
plot + geom_bar(stat = 'identity') + theme_xf +
labs(title = 'expression of genomic elements (rpkm > 0.1)',x=NULL, y = 'Count') +
geom_text(aes(y = count),vjust = -0.5, size =3.5)+
scale_fill_manual(values = c('firebrick3','grey50'))+
ylim(0,max(plot.table$count *1.1))+
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(hjust = 0.5),
legend.position = c(.85,.75))
ggsave('figure/expressed_transcripts_TIP60.jpg', width = 6, height = 6, dpi =150, units = 'in')
?ggsave
ggsave(filename = 'figures/genome_expression.jpg', width = 6, height = 6, dpi =150, units = 'in')
library(plotly)
plot.table <- genetype.info
plot.table$gene_type <- paste0(plot.table$gene_type,'(',plot.table$count,')')
p <- plot_ly(plot.table,labels = ~gene_type, values = ~readsperc, type = 'pie',
textposition = 'outside',
textinfo = 'percent',
marker = list(colors = colors,
line = list(color = '#FFFFFF',
width = 1)))
p <- layout(p,
title = 'Distribution of GRO-seq reads on genomic elements',
margin = list(l=100,t=80,b=50),
showlegend = T)
p
plotly_IMAGE(p, width = 700, height = 700, out_file = 'figures/GRO-seq_reads_distribution.png')
Sys.setenv("plotly_username"="Feng_Xiong")
Sys.setenv("plotly_api_key"="cKUazDNFFbwzc7m8EGdj")
plotly_IMAGE(p, width = 700, height = 700, out_file = 'figures/GRO-seq_reads_distribution1.png')
DefExp
DefExp <-  function(counttable, groups, ref){
library(DESeq2)
dt <- counttable
condition <- groups
groupn <- length(groups)
count.table <- as.matrix(as.data.frame(dt)[,(ncol(dt)-groupn+1):ncol(dt)])
rownames(count.table) <- as.data.frame(dt)[,1] %>% as.character()
colData <- DataFrame(condition = condition,
row.names = colnames(count.table))
dds <- DESeqDataSetFromMatrix(countData = count.table,
colData = colData,
design = ~ condition)
dds$condition <- relevel(dds$condition, ref = ref)
dds <- DESeq(dds)
res <- results(dds)
res.table <- as.data.table(res)
res.table <- cbind(dt,res.table)
res.table
}
save(DefExp,file = 'r.func/DefExp.rdata')
exptable <- counttable[rpkm >= min.rpkm,]
res.deseq2 <- DefExp(exptable,groups = c('siCTL','siCTL','siTIP60','siTIP60'),ref = 'siCTL')
View(res.deseq2)
plot.table <- dif.deseq2
plot.table <- res.deseq2
plot.table$regulation <- 'NC'
plot.table[padj < 0.5 & log2FoldChange > 0,]$regulation <- 'Increase'
plot.table[padj < 0.5 & log2FoldChange < 0,]$regulation <- 'Decrease'
plot <- ggplot(plot.table,aes(x = gene_type, fill = regulation))
plot + geom_bar(width = 0.9) + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))
genetype.info
plot.table <- res.deseq2[gene_type %in% genetype.info[count > 200]$gene_type,]
plot.table$regulation <- 'NC'
plot.table[padj < 0.5 & log2FoldChange > 0,]$regulation <- 'Increase'
plot.table[padj < 0.5 & log2FoldChange < 0,]$regulation <- 'Decrease'
plot <- ggplot(plot.table,aes(x = gene_type, fill = regulation))
plot + geom_bar(width = 0.9) + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))
genetype.info
plot.table <- res.deseq2[gene_type %in% genetype.info[count > 200]$gene_type,]
plot.table$regulation <- 'NC'
plot.table[padj < 0.05 & log2FoldChange > 0,]$regulation <- 'Increase'
plot.table[padj < 0.05 & log2FoldChange < 0,]$regulation <- 'Decrease'
plot <- ggplot(plot.table,aes(x = gene_type, fill = regulation))
plot + geom_bar(width = 0.9) + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot + geom_bar(width = 0.9) + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))+
scale_color_manual(values = c('coral1','coral2','coral3'))
plot + geom_bar(width = 0.9) + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))+
scale_fill_manual(values = c('coral1','coral2','coral3'))
plot + geom_bar(width = 0.9) + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))+
scale_fill_manual(values = c('coral1','coral2','azure4'))
genetype.major <- genetype.info[readsperc > 0.001 & count > 200,][order(-count)]$gene_type %>% as.character()
genetype.major
plot.table <- res.deseq2[gene_type %in% genetype.major,]
plot.table$regulation <- 'NC'
plot.table[padj < 0.05 & log2FoldChange > 0,regulation := 'Increase']
plot.table[padj < 0.05 & log2FoldChange < 0,regulation := 'Decrease']
colnames(res.deseq2)
plot <- ggplot(plot.table,aes(x = gene_type, fill = regulation))
plot + geom_bar(width = 0.9) + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot.table <- res.deseq2[gene_type %in% genetype.major,][,gene_type:=factor(gene_type,
levels = genetype.major)]
plot.table$regulation <- 'NC'
plot.table[padj < 0.05 & log2FoldChange > 0,regulation := 'Increase']
plot.table[padj < 0.05 & log2FoldChange < 0,regulation := 'Decrease']
plot.table[,regulation := factor(regulation, levels = c('Increase','Decrease','NC'))]
plot <- ggplot(plot.table,aes(x = gene_type, fill = regulation))
plot + geom_bar(width = 0.9) + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot.table$regulation <- 'NC'
plot.table[pvalue < 0.05 & log2FoldChange > 0,regulation := 'Increase']
plot.table[pvalue < 0.05 & log2FoldChange < 0,regulation := 'Decrease']
plot.table[,regulation := factor(regulation, levels = c('Increase','Decrease','NC'))]
plot <- ggplot(plot.table,aes(x = gene_type, fill = regulation))
plot + geom_bar(width = 0.9) + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot.table <- res.deseq2[gene_type %in% genetype.major,][,gene_type:=factor(gene_type,
levels = genetype.major)]
plot.table$regulation <- 'NC'
plot.table[pvalue < 0.05 & log2FoldChange > 0,regulation := 'Increase']
plot.table[pvalue < 0.05 & log2FoldChange < 0,regulation := 'Decrease']
plot.table[,regulation := factor(regulation, levels = c('Increase','Decrease','NC'))]
plot <- ggplot(plot.table,aes(x = gene_type, fill = regulation))
plot + geom_bar(width = 0.9) + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))
scale_fill_manual(values = c('firebrick2','slateblute1','grey50')) +
theme(legend.position = c(.8,.9))
plot + geom_bar(width = 0.9) + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot + geom_bar(width = 0.9) + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x =NULL)+
scale_fill_manual(values = c('firebrick2','slateblute1','grey50')) +
theme(legend.position = c(.8,.9))
plot + geom_bar(width = 0.9) + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x =NULL)+
scale_fill_manual(values = c('firebrick2','slateblue1','grey50')) +
theme(legend.position = c(.8,.9))
plot + geom_bar(width = 0.9) + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x =NULL)+
scale_fill_manual(values = c('firebrick2','royalblue3','grey20')) +
theme(legend.position = c(.8,.9))
plot + geom_bar(width = 0.9) + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x =NULL)+
scale_fill_manual(values = c('firebrick2','royalblue3','grey80')) +
theme(legend.position = c(.8,.9))
plot + geom_bar(width = 0.9) + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x =NULL)+
scale_fill_manual(values = c('firebrick2','royalblue3','grey60')) +
theme(legend.position = c(.8,.7))
plot + geom_bar(width = 0.9) + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(title = 'expression after siTIP60',x =NULL)+
scale_fill_manual(values = c('firebrick2','royalblue3','grey60')) +
theme(legend.position = c(.85,.7))
plot + geom_bar(width = 0.9) + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(title = 'expression after siTIP60',x =NULL)+
scale_fill_manual(values = c('firebrick2','royalblue3','grey60')) +
theme(legend.position = c(.85,.7),
plot.title = element_text(hjust = 0.5))
plot + geom_bar(width = 0.9) + theme_xf + theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(title = 'expression after siTIP60 (p < 0.05)',x =NULL)+
scale_fill_manual(values = c('firebrick2','royalblue3','grey60')) +
theme(legend.position = c(.85,.7),
plot.title = element_text(hjust = 0.5))
ggsave('figures/dif_expressed_transcripts_siTIP60.jpg', width = 6, height = 6, dpi =150, units = 'in')
res.deseq2 <- plot.table
hk_gene <- fread('misc/HK_genes.txt')
head(hk_gene)
hk_gene <- fread('misc/HK_genes.txt',header = F)
head(res.deseq2)
hk_gene
hk_gene <- fread('misc/HK_genes.txt',header = F) %>% `colnames<-`(c('gene_name','refseq'))
test <- merge(res.deseq2,hk_gene,all.x = T)
hk_gene$housekp <- 'housekeeping'
test <- merge(res.deseq2,hk_gene,all.x = T)
res.deseq2 <- test
table(test[gene_type == 'protein_coding',]$housekp)
res.deseq2[housekp != 'housekeeping', housekp := 'other']
table(res.deseq2$housekp)
res.deseq2[housekp != 'housekeeping', housekp := 'other']
table(res.deseq2$housekp)
View(res.deseq2)
res.deseq2[is.na(refseq),housekp := 'other']
table(res.deseq2$housekp)
library(plotly)
p <- plot_ly(res.deseq2[gene_type == 'protein_coding',],labels = ~houskp, type = 'pie',
textposition = 'outside',
textinfo = 'percent',
marker = list(colors = colors,
line = list(color = '#FFFFFF',
width = 1)))
layout(p,
title = 'Distribution of GRO-seq reads on genomic elements',
margin = list(l=100,t=80,b=50),
showlegend = T)
colnames(res.deseq2)
p <- plot_ly(res.deseq2[gene_type == 'protein_coding',],labels = ~housekp, type = 'pie',
textposition = 'outside',
textinfo = 'percent',
marker = list(colors = colors,
line = list(color = '#FFFFFF',
width = 1)))
layout(p,
title = 'Distribution of GRO-seq reads on genomic elements',
margin = list(l=100,t=80,b=50),
showlegend = T)
p <- plot_ly(res.deseq2[gene_type == 'protein_coding',],labels = ~housekp, type = 'pie',
textposition = 'inside',
textinfo = 'percent',
marker = list(colors = colors,
line = list(color = '#FFFFFF',
width = 1)))
layout(p,
margin = list(l=100,t=80,b=50),
showlegend = T)
?plotly
p <- plot_ly(res.deseq2[gene_type == 'protein_coding',],labels = ~housekp, type = 'pie',
textposition = 'inside',
textinfo = 'label',
marker = list(colors = colors,
line = list(color = '#FFFFFF',
width = 1)))
layout(p,
margin = list(l=100,t=80,b=50),
showlegend = T)
plot.table <- res.deseq2[gene_type == 'protein_coding',][,.N,by=housekp]
plot.table
nrow(hk_gene)
